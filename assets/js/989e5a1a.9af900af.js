"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([["3367"],{739:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,toc:()=>l,default:()=>u,metadata:()=>a,assets:()=>c,contentTitle:()=>s});var a=JSON.parse('{"id":"Java/ProblemSummary/Spring Boot","title":"Spring Boot","description":"singleton Inject but need dynamic changing value","source":"@site/docs/01-Java/03-ProblemSummary/04-Spring Boot.mdx","sourceDirName":"01-Java/03-ProblemSummary","slug":"/Java/ProblemSummary/Spring Boot","permalink":"/summary/Java/ProblemSummary/Spring Boot","draft":false,"unlisted":false,"editUrl":"https://github.com/Halcyon666/summary/edit/main/docs/01-Java/03-ProblemSummary/04-Spring Boot.mdx","tags":[],"version":"current","lastUpdatedBy":"Halcyon666","lastUpdatedAt":1758470415000,"sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"github\u76F8\u5173\u95EE\u9898\u5904\u7406","permalink":"/summary/Java/ProblemSummary/github problems"},"next":{"title":"java \u9762\u8BD5\u98981","permalink":"/summary/Java/Interview/Java-Case-Interview-one"}}'),r=t(5813),o=t(6436);let i={},s="Spring Boot",c={},l=[{value:"singleton Inject but need dynamic changing value",id:"singleton-inject-but-need-dynamic-changing-value",level:2}];function d(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"spring-boot",children:"Spring Boot"})}),"\n",(0,r.jsx)(n.h2,{id:"singleton-inject-but-need-dynamic-changing-value",children:"singleton Inject but need dynamic changing value"}),"\n",(0,r.jsxs)(n.p,{children:["A bug finds in those of tasks where you need change the date by the nature. ",(0,r.jsx)("br",{}),"\nFirstly You should inject a prototype bean to spring context, instead of injecting a singleton object; Secondly you need use this way."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Component\npublic class SingletonService {\n\n    // \u4F7F\u7528 ObjectFactory\uFF08\u4E5F\u53EF\u4EE5\u7528 javax.inject.Provider \u6216 Spring \u7684 Provider\uFF09\n    @Resource\n    // highlight-next-line\n    private ObjectFactory<PrototypeBean> prototypeBeanFactory;\n\n    public void callTest() {\n        PrototypeBean prototypeBean = prototypeBeanFactory.getObject();\n        prototypeBean.doSomething();\n    }\n}\n"})})]})}function u(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
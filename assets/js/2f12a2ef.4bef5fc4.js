"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[971],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),d=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=d(n),s=a,u=m["".concat(i,".").concat(s)]||m[s]||k[s]||o;return n?r.createElement(u,c(c({ref:t},p),{},{components:n})):r.createElement(u,c({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=s;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:a,c[1]=l;for(var d=2;d<o;d++)c[d]=n[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},4618:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const o={},c=void 0,l={unversionedId:"Container-Tech/docker/Docker-Command-and-Dockerfile",id:"Container-Tech/docker/Docker-Command-and-Dockerfile",title:"Docker-Command-and-Dockerfile",description:"---",source:"@site/docs/Container-Tech/docker/Docker-Command-and-Dockerfile.md",sourceDirName:"Container-Tech/docker",slug:"/Container-Tech/docker/Docker-Command-and-Dockerfile",permalink:"/summary/docs/Container-Tech/docker/Docker-Command-and-Dockerfile",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Container-Tech/docker/Docker-Command-and-Dockerfile.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useful links",permalink:"/summary/docs/CollectLinks/useful_links"},next:{title:"Docker Compose",permalink:"/summary/docs/Container-Tech/docker/docker-compose\u914d\u7f6eredis-cluster-jenkins"}},i={},d=[{value:"hidemeta: true",id:"hidemeta-true",level:2},{value:"\u955c\u50cf\u76f8\u5173\u547d\u4ee4",id:"\u955c\u50cf\u76f8\u5173\u547d\u4ee4",level:2},{value:"\u5bb9\u5668\u76f8\u5173\u7684\u547d\u4ee4",id:"\u5bb9\u5668\u76f8\u5173\u7684\u547d\u4ee4",level:2},{value:"Dockerfile",id:"dockerfile",level:2},{value:"Understand how CMD and ENTRYPOINT interact",id:"understand-how-cmd-and-entrypoint-interact",level:3},{value:"\u4e00\u4e2a\u7b80\u5355\u7684\u6848\u4f8b",id:"\u4e00\u4e2a\u7b80\u5355\u7684\u6848\u4f8b",level:3}],p={toc:d},m="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("p",null,'title: "Docker Command \u548c Docker File"'),(0,a.kt)("h2",{id:"hidemeta-true"},"hidemeta: true"),(0,a.kt)("h2",{id:"\u955c\u50cf\u76f8\u5173\u547d\u4ee4"},"\u955c\u50cf\u76f8\u5173\u547d\u4ee4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"# \u4e0b\u8f7d\u955c\u50cf\ndocker pull xxx\n# \u641c\u7d20\u955c\u50cf\ndocker search xxx\n# \u67e5\u770b\u5df2\u7ecf\u4e0b\u8f7d\u4e86\u54ea\u4e9b\u955c\u50cf\ndocker images\n# \u67e5\u770b\u5df2\u4e0b\u8f7d\u955c\u50cf\u7684id\ndocker images -q \n\n# \u5220\u9664\u955c\u50cf \ndocker rmi containerId/SOURCE_IMAGE[:TAG]\n#\u5220\u9664\u6240\u6709\u955c\u50cf\ndocker rmi $(docker images -q)\ndocker images -q | xargs docker rmi \n\n# \u5220\u9664tag\u4e3a<none>\u7684\u955c\u50cf\ndocker rmi | xargs docker images | awk '{if ($2 == \"<none>\" )print $3}' | xargs docker rmi -f\n")),(0,a.kt)("h2",{id:"\u5bb9\u5668\u76f8\u5173\u7684\u547d\u4ee4"},"\u5bb9\u5668\u76f8\u5173\u7684\u547d\u4ee4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"# \u8f7d\u5165\u4e00\u4e2a\u672c\u5730\u955c\u50cf \ndocker load -i tomcat-8.0-jre.tar\n# \u542f\u52a8\u4e00\u4e2a\u5bb9\u5668 \ndocker run -dp 8080:8080 tomcat-8.0-jre --name tomcat \n\ndocker run -p 8887:8887 -it  --name myideac jetbrains/projector-idea-c\ndocker start myideac\n\n# \u8fdb\u5165\u4ea4\u4e92\u6a21\u62df\ndocker run -it debian /bin/bash\n# \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\ndocker ps\n# \u67e5\u770b\u5168\u90e8\u5bb9\u5668\u7684id\ndocker ps -q\n# \u67e5\u770b\u5168\u90e8\u5bb9\u5668\ndocker ps -a \n#\u8fd0\u884c \u91cd\u542f \u505c\u6b62 \u6740\u6389\u5bb9\u5668\ndocker start/restart/stop/kill containerId/name\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"# \u5220\u9664\u5df2\u521b\u5efa\u7684\u5bb9\u5668\ndocker rm containerId/name:tag\ndocker rm $(docker ps -q)\n# \u505c\u6b62\u5bb9\u5668 \ndocker stop $(docker ps -a | grep \"Exited\" | awk '{print $1 }')    \n# \u5220\u9664\u5bb9\u5668  \ndocker rm $(docker ps -a | grep \"Exited\" | awk '{print $1 }')      \n# \u5220\u9664\u955c\u50cf    \ndocker rmi $(docker images | grep \"none\" | awk '{print $3}')    \n\n# \u67e5\u770b\u65e5\u5fd7\ndocker logs containerId/name\n# \u5b9e\u65f6\u663e\u793a\u65e5\u5fd7\ndocker logs -tf containerId/name\n# \u884c\u9996\u6dfb\u52a0\u65f6\u95f4 \u7684\u65e5\u5fd7\ndocker logs -tail  5 containerId/name\n\n# \u67e5\u770b\u5bb9\u5668\u8d44\u6e90\u60c5\u51b5\ndocker top containerId\n# \u8fdb\u5165\u5bb9\u5668\u7684\u4ea4\u4e92\u6a21\u5f0f\ndocker exec -it containerId bash\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'# \u590d\u5236 \u5bb9\u5668\u4e2d\u7684\u6587\u4ef6\u3001\u76ee\u5f55\u5230 \u5bbf\u4e3b\u673a\ndocker cp containerId:/root/test.txt /root/\n\n# \u590d\u5236 \u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u3001\u76ee\u5f55\u5230 \u5bb9\u5668\u4e2d\ndocker cp a.txt containerId:/root/\n\n# \u6253\u5305\u4e00\u4e2a\u955c\u50cf\ndocker commit -m "description xx" -a "author" containerId SOURCE_IMAGE[:TAG]\ndocker save redis:latest -o redis-cluster.tar\n\n# \u4e0a\u4f20\u5230docker hub\u4ed3\u5e93\ndocker tag redis:latest docker.io/whalefall541/redis:0.01\ndocker push docker.io/whalefall541/redis:0.01\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"# \u67e5\u770bdocker \u7f51\u7edc\u914d\u7f6e\ndocker network ls\n\n# \u521b\u5efa\u81ea\u5b9a\u4e49\u7f51\u6865\ndocker mynetwork create mynetwork\n# \u5c06\u5bb9\u5668\u6307\u5b9a\u5230 \u521b\u5efa\u7684\u7f51\u6865\u4e0a\ndocker run -dp 80:80 --network mynetwork redis\n# \u5220\u9664\u7f51\u6865\ndocker newnetwork rm mynetwork\n# \u67e5\u770b\u7f51\u6865\ndocker inpsect mynetwork\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"# \u6570\u636e\u5377\u6307\u5b9a\n# docker run -dp 80:80 tomcat -v /root/webapps:/root/webapps\ndocker run -dp 80:80 tomcat -v aa:/root/webapps\n# \u6570\u636e\u5377\u521b\u5efa\ndocker volume create volume_1\n# \u5220\u9664\u6240\u6709\u672a\u4f7f\u7528\u7684\u5377\ndocker volume prune \ndocker rm volume_1\n# \u67e5\u770b\u6570\u636e\u5377\ndocker inspect volume_1\n\n# \u91cd\u542fdocker \nsudo systemctl daemon-reload \nsudo systemctl restart docker\nsudo systemctl status docker\n")),(0,a.kt)("h2",{id:"dockerfile"},"Dockerfile"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ADD"),(0,a.kt)("li",{parentName:"ul"},"COPY"),(0,a.kt)("li",{parentName:"ul"},"ENV"),(0,a.kt)("li",{parentName:"ul"},"EXPOSE"),(0,a.kt)("li",{parentName:"ul"},"FROM"),(0,a.kt)("li",{parentName:"ul"},"LABEL"),(0,a.kt)("li",{parentName:"ul"},"STOPSIGNAL"),(0,a.kt)("li",{parentName:"ul"},"USER"),(0,a.kt)("li",{parentName:"ul"},"VOLUME"),(0,a.kt)("li",{parentName:"ul"},"WORKDIR"),(0,a.kt)("li",{parentName:"ul"},"ONBUILD (when combined with one of the supported instructions above)")),(0,a.kt)("p",null,"\u8be6\u7ec6\u6559\u7a0b\u8bf7\u770b\u5b98\u7f51 ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/builder/"},"Dockerfile")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact"},"how-cmd-and-entrypoint-interact")),(0,a.kt)("h3",{id:"understand-how-cmd-and-entrypoint-interact"},"Understand how CMD and ENTRYPOINT interact"),(0,a.kt)("p",null,"Both ",(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ENTRYPOINT")," instructions define what command gets executed when running a container.\nThere are few rules that describe their co-operation."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Dockerfile should specify at least one of ",(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"ENTRYPOINT")," commands.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"ENTRYPOINT")," should be defined when using the container as an executable.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," should be used as a way of defining default arguments for an ",(0,a.kt)("inlineCode",{parentName:"p"},"ENTRYPOINT")," command\nor for executing an ad-hoc command in a container.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," will be overridden when running the container with alternative arguments."))),(0,a.kt)("p",null,"The table below shows what command is executed for different ",(0,a.kt)("inlineCode",{parentName:"p"},"ENTRYPOINT")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," combinations:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"}),(0,a.kt)("th",{parentName:"tr",align:"left"},"No ENTRYPOINT"),(0,a.kt)("th",{parentName:"tr",align:"left"},"ENTRYPOINT exec_entry p1_entry"),(0,a.kt)("th",{parentName:"tr",align:"left"},"ENTRYPOINT ",'["exec_entry", "p1_entry"]'))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"No CMD")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("em",{parentName:"td"},"error, not allowed")),(0,a.kt)("td",{parentName:"tr",align:"left"},"/bin/sh -c exec_entry p1_entry"),(0,a.kt)("td",{parentName:"tr",align:"left"},"exec_entry p1_entry")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"CMD ",'["exec_cmd", "p1_cmd"]')),(0,a.kt)("td",{parentName:"tr",align:"left"},"exec_cmd p1_cmd"),(0,a.kt)("td",{parentName:"tr",align:"left"},"/bin/sh -c exec_entry p1_entry"),(0,a.kt)("td",{parentName:"tr",align:"left"},"exec_entry p1_entry exec_cmd p1_cmd")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"CMD ",'["p1_cmd", "p2_cmd"]')),(0,a.kt)("td",{parentName:"tr",align:"left"},"p1_cmd p2_cmd"),(0,a.kt)("td",{parentName:"tr",align:"left"},"/bin/sh -c exec_entry p1_entry"),(0,a.kt)("td",{parentName:"tr",align:"left"},"exec_entry p1_entry p1_cmd p2_cmd")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"CMD exec_cmd p1_cmd")),(0,a.kt)("td",{parentName:"tr",align:"left"},"/bin/sh -c exec_cmd p1_cmd"),(0,a.kt)("td",{parentName:"tr",align:"left"},"/bin/sh -c exec_entry p1_entry"),(0,a.kt)("td",{parentName:"tr",align:"left"},"exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note")),(0,a.kt)("p",{parentName:"blockquote"},"If ",(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," is defined from the base image, setting ",(0,a.kt)("inlineCode",{parentName:"p"},"ENTRYPOINT")," will\nreset ",(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," to an empty value. In this scenario, ",(0,a.kt)("inlineCode",{parentName:"p"},"CMD")," must be defined in the\ncurrent image to have a value."),(0,a.kt)("p",{parentName:"blockquote"},"You can override the ENTRYPOINT setting using --entrypoint,\nbut this can only set the binary to exec (no sh -c will be used).")),(0,a.kt)("h3",{id:"\u4e00\u4e2a\u7b80\u5355\u7684\u6848\u4f8b"},"\u4e00\u4e2a\u7b80\u5355\u7684\u6848\u4f8b"),(0,a.kt)("p",null,"\u62f7\u8d1dspringboot\u6587\u4ef6\u5230 \u5bb9\u5668\u5e76 \u6307\u5b9aspring\u914d\u7f6e\u6587\u4ef6\u8fd0\u884c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM java\nENV JARNAME="demo-0.0.1-SNAPSHOT.jar"\nWORKDIR /root/app\nRUN /bin/bash -c "echo \'aaaa\' >> 1.txt"\nEXPOSE 80\nVOLUME ["/root/app"]\nENTRYPOINT ["java","-jar","demo-0.0.1-SNAPSHOT.jar", "-Dspring.config.location"]\nCMD ["application.yml"]\n\n#ENTRYPOINT ["echo","/root"]\n#CMD ["/root/app"]\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"docker build -t springboot:0.01 .\ndocker run -v /dockerlearn/dockerfilelearn:/root/app -p 80:80 --network rediscluster_default --rm springboot:0.01\n\ndocker run -p 8080:800 --rm learncase:latest\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note")),(0,a.kt)("ol",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ol"},"\u5982\u679c ",(0,a.kt)("inlineCode",{parentName:"li"},'ENTRYPOINT ["exec_entry", "p1_entry"] ')," \u540e\u9762\u8fd8\u6709\n",(0,a.kt)("inlineCode",{parentName:"li"},' CMD ["p1_cmd", "p2_cmd"]')," \u90a3\u4e48CMD\u4e2d\u7684\u53c2\u6570\u5c06\u5168\u90e8\u8ffd\u52a0\u5230 ENTRYPOINT\n\u5f53",(0,a.kt)("inlineCode",{parentName:"li"},"docker run")," \u540e\u9762\u8ddf\u53c2\u6570\u65f6\u4f1a\u8986\u76d6\u6389CMD\u4e2d\u7684\u53c2\u6570"),(0,a.kt)("li",{parentName:"ol"},"CMD ENTRYPOINT \u6570\u7ec4\u5f62\u5f0f \u90fd\u662fexec\u6a21\u5f0f\uff0c\u4e0d\u652f\u6301\u89e3\u6790\u672c\u5730\u53d8\u91cf\n\u5982\u679c\u60f3\u89e3\u6790 \u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4 ",(0,a.kt)("inlineCode",{parentName:"li"},'ENTRYPOINT ["sh","-c","java -jar $JARNAME"]')),(0,a.kt)("li",{parentName:"ol"},"\u5982\u679c\u4f7f\u7528\u4e86",(0,a.kt)("inlineCode",{parentName:"li"},'ENTRYPOINT ["sh","-c",..]')," \u6216\u8005\u76f4\u63a5\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},'ENTRYPOINT "echo Hello world"'),"\n\u90a3\u4e48\u76f4\u63a5\u5c31\u65e0\u6cd5\u8986\u76d6\u53c2\u6570\u4e86"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u53c2\u8003\u6587\u732e"),(0,a.kt)("ol",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/builder/"},"Dockerfile")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact"},"how-cmd-and-entrypoint-interact")))),(0,a.kt)("blockquote",null,(0,a.kt)("font",{color:"red"},"\u8f6c\u8f7d\u8bf7\u6ce8\u660e [\u539f\u6587\u5730\u5740](https://www.cnblogs.com/whalefall541/p/15318270.html)")))}k.isMDXComponent=!0}}]);
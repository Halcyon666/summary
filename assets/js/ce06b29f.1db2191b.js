"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([["5721"],{3448:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>d,toc:()=>u,default:()=>c,metadata:()=>l,assets:()=>o,contentTitle:()=>r});var l=JSON.parse('{"id":"Algorithm/LeetCode two link table add","title":"\u4E24\u4E2A\u5355\u94FE\u8868\u76F8\u52A0","description":"\u9898\u76EE","source":"@site/docs/03-Algorithm/08-LeetCode two link table add.mdx","sourceDirName":"03-Algorithm","slug":"/Algorithm/LeetCode two link table add","permalink":"/summary/Algorithm/LeetCode two link table add","draft":false,"unlisted":false,"editUrl":"https://github.com/Halcyon666/summary/edit/main/docs/03-Algorithm/08-LeetCode two link table add.mdx","tags":[],"version":"current","lastUpdatedBy":"Halcyon666","lastUpdatedAt":1758433273000,"sidebarPosition":8,"frontMatter":{"title":"\u4E24\u4E2A\u5355\u94FE\u8868\u76F8\u52A0","sidebar_label":"\u4E24\u4E2A\u5355\u94FE\u8868\u76F8\u52A0"},"sidebar":"tutorialSidebar","previous":{"title":"\u6C424\u7684\u5E42","permalink":"/summary/Algorithm/LeetCode 4 power"},"next":{"title":"\u8FD4\u56DE\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u4E2D\u4F4D\u6570","permalink":"/summary/Algorithm/LeetCode return twomedian of two positive intergers"}}'),s=t(5813),i=t(6436),a=t(145);let d={title:"\u4E24\u4E2A\u5355\u94FE\u8868\u76F8\u52A0",sidebar_label:"\u4E24\u4E2A\u5355\u94FE\u8868\u76F8\u52A0"},r,o={},u=[];function m(e){let n={a:"a",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://leetcode-cn.com/problems/add-two-numbers/",children:"\u9898\u76EE"}),"\n",(0,s.jsx)(n.strong,{children:"NOTE"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\u8981\u70B9\u4E0D\u8981\u5FD8\u4E86\u6700\u540E\u7684\u8FDB\u4F4D"}),"\n",(0,s.jsx)(n.li,{children:"\u4E24\u4E2A\u5355\u94FE\u8868\u53EF\u4EE5\u957F\u5EA6\u4EFB\u610F"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'package whale.leetcode.simple;\n\n/**\n * @Author: WhaleFall541\n * @Date: 2021/5/29 20:30\n */\npublic class AddTwoSumLinkedList {\n    public static class ListNode {\n        int val;\n        ListNode next;\n\n        ListNode() {\n        }\n\n        ListNode(int val) {\n            this.val = val;\n        }\n\n        ListNode(int val, ListNode next) {\n            this.val = val;\n            this.next = next;\n        }\n    }\n\n    /*\n    [9,9,9,9,9,9,9]\n    [9,9,9,9]\n     */\n    public static void main(String[] args) {\n        ListNode l1 = new ListNode(9, new ListNode(9, new ListNode(9,\n                new ListNode(9, new ListNode(9, new ListNode(9, new ListNode(9)))))));\n        ListNode l2 = new ListNode(9, new ListNode(9, new ListNode(9, new ListNode(9))));\n        ListNode result = addTwoNumbers(l1, l2);\n        StringBuilder sb = new StringBuilder();\n        while (result != null) {\n            sb.append(result.val);\n            result = result.next;\n        }\n        System.out.println("sb = " + sb);\n\n    }\n\n    public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        ListNode result;\n        ListNode head = result = new ListNode();\n        int temp = 0, value1, value2;\n\n        while (l1 != null || l2 != null) {\n            value1 = (l1 == null) ? 0 : l1.val;\n            value2 = (l2 == null) ? 0 : l2.val;\n\n            // \u5F53\u524D\u6307\u9488\u4F4D\u503C\u7684\u503C\u76F8\u52A0\n            result.val = value1 + value2 + temp;\n            temp = result.val / 10;// \u8BB0\u5F55\u8FDB\u4F4D\u7684\u503C\n            result.val = result.val % 10;// \u8BB0\u5F55\u5F53\u524D\u4F4D\u7684\u503C\n\n            // l1 l2 \u53EA\u8981\u4E0D\u4E3A\u7A7A\u5219\u540E\u79FB\u6307\u9488\n            if (l1 != null)\n                l1 = l1.next;\n            if (l2 != null)\n                l2 = l2.next;\n            // l1 l2 \u53EA\u8981\u5176\u4E00\u4E0D\u4E3A\u7A7A\u5219\u7ED3\u679C\u96C6\u9700\u8981\u540E\u5EF6\u4E00\u4F4D\n            if (l1 != null || l2 != null)\n                result = result.next = new ListNode();\n        }\n\n        // \u5904\u7406\u6700\u540E\u4E00\u4F4D\u8FDB\u4F4D\u7684\u60C5\u51B5\n        if (temp != 0)\n            result.next = new ListNode(temp);\n        return head;\n    }\n}\n'})}),"\n","\n",(0,s.jsx)(a.A,{})]})}function c(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);
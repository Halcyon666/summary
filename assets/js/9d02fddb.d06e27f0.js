"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([[9786],{508:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(9729);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}},7995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Frontend/github-page-blog","title":"Docusaurus github page","description":"refers article","source":"@site/docs/02-Frontend/04-github-page-blog.mdx","sourceDirName":"02-Frontend","slug":"/Frontend/github-page-blog","permalink":"/summary/Frontend/github-page-blog","draft":false,"unlisted":false,"editUrl":"https://github.com/Halcyon666/summary/edit/main/docs/02-Frontend/04-github-page-blog.mdx","tags":[],"version":"current","lastUpdatedBy":"Halcyon666","lastUpdatedAt":1758357824000,"sidebarPosition":4,"frontMatter":{"title":"Docusaurus github page","sidebar_label":"Docusaurus github page"},"sidebar":"tutorialSidebar","previous":{"title":"Vue \u57fa\u78402","permalink":"/summary/Frontend/vue-grammer-two"},"next":{"title":"Vue \u9879\u76ee\u7b14\u8bb0","permalink":"/summary/Frontend/vue-project-notes"}}');var s=n(5813),i=n(508);const r={title:"Docusaurus github page",sidebar_label:"Docusaurus github page"},a=void 0,u={},c=[];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components},{TailProtocal:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("TailProtocal",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://juejin.cn/post/7115631818736402440",children:"refers article"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"besides: you need install yarn and run yarn install in your docs project"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://docusaurus.io/docs/deployment#deploying-to-github-pages",children:"Docusaurus Deployment"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yml",children:"name: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main\n    # Review gh actions docs if you want to further define triggers, paths, etc\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n\njobs:\n  deploy:\n    name: Deploy to GitHub Pages\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: yarn\n\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      - name: Build website\n        run: yarn build\n\n      # Popular action to deploy to GitHub Pages:\n      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.ACCESS_TOKEN }}\n          # Build output to publish to the `gh-pages` branch:\n          publish_dir: ./build\n          # The following lines assign commit authorship to the official\n          # GH-Actions bot for deploys to `gh-pages` branch:\n          # https://github.com/actions/checkout/issues/13#issuecomment-724415212\n          # The GH actions bot is used by default if you didn't specify the two fields.\n          # You can swap them out with your own user credentials.\n\n"})}),"\n",(0,s.jsx)(n,{})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);
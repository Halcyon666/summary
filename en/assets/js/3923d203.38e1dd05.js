"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([[7615],{6850:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=n(5893),o=n(1151);const r={title:"Asp in Spring AOP",sidebar_label:"Asp in Spring AOP",sidebar_position:10},s=void 0,a={id:"Java/Spring/Spring AOP Aspect",title:"Asp in Spring AOP",description:"For the relevant code fromOfficial Codebase spring-test) please seespring-framework org.springframe.mylearntest package.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/01-Java/02-Spring/Spring AOP Aspect.mdx",sourceDirName:"01-Java/02-Spring",slug:"/Java/Spring/Spring AOP Aspect",permalink:"/en/Java/Spring/Spring AOP Aspect",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Asp in Spring AOP",sidebar_label:"Asp in Spring AOP",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Spring AOP\u4e2d\u7684Advice",permalink:"/en/Java/Spring/Spring AOP Advice"},next:{title:"Spring AOP\u7684\u7ec7\u51651",permalink:"/en/Java/Spring/Spring AOP Woven1"}},d={},c=[{value:"PointcutAdvisor",id:"pointcutadvisor",level:2},{value:"DefaultPointcutAdvisor",id:"defaultpointcutadvisor",level:3},{value:"NameMatchMethodPointetAdvisor",id:"namematchmethodpointetadvisor",level:3},{value:"RegexpMethodPointcutAdvisor",id:"regexpmethodpointcutadvisor",level:3},{value:"DefaultBeanFactoryPointPointAdvisor",id:"defaultbeanfactorypointpointadvisor",level:3},{value:"IntroductionAdvisor",id:"introductionadvisor",level:3},{value:"Order",id:"order",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["For the relevant code from",(0,i.jsx)(t.a,{href:"https://github.com/spring-projects/spring-framework.git",title:"official source",children:"Official Codebase"})," spring-test) please see",(0,i.jsx)(t.a,{href:"https://github.com/Halcyon66/spring-frame-modified/tree/main/spring-test",children:"spring-framework"})," org.springframe.mylearntest package."]}),"\n",(0,i.jsx)(t.p,{children:"Aspect is the conceptual entity of the AOP, which modular encapsulated the horizontal focus logic of the system.Normally, Aspects could include multiple points and related definitions of Advice."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/9p6abQqSHTxLFX.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:"The Advisor represents Aspects in Spring, but, unlike normal Aspects, normally holds only one Point and one Advice.In theory, on the other hand, there can be multiple points and multiple Advices, so Advisor is a special aspect."}),"\n",(0,i.jsx)(t.h2,{id:"pointcutadvisor",children:"PointcutAdvisor"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/Iy3GrnFvNWlB92k.png",alt:""})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/yqwr2TXstDvE4YM.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:"Indeed, org.springframe.aop.PointcutAdvisor is the real definition of one Pointcut and one Advice's Advisor, and most of the advice was achieved under Pointcut."}),"\n",(0,i.jsx)(t.h3,{id:"defaultpointcutadvisor",children:"DefaultPointcutAdvisor"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<beans>\n    <bean id="pointcut"\n      class="org.springframework.mylearntest.aop.pointcut.selfdefinepointcut.QueryMethodPointcut"/>\n    <bean id="advice" class="org.springframework.mylearntest.aop.advice.perclass.DiscountMethodInterceptor"/>\n\n    <bean id="advisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">\n        <property name="pointcut" ref="pointcut"/>\n        <property name="advice" ref="advice"/>\n    </bean>\n</beans>\n'})}),"\n",(0,i.jsx)(t.h3,{id:"namematchmethodpointetadvisor",children:"NameMatchMethodPointetAdvisor"}),"\n",(0,i.jsx)(t.p,{children:"This category holds an instance of the NameMatchMethodPointPut type.When setting the methods setMappedName and setMappedNames to be intercepted via NameMatchMethodology_Method_Opened Method_Method_Name is actually working on NameMatchMethodPointAdvisor_NameMatchMethodPointAdvisor"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'Advocice advelice = new DiscountMethodInterceptor();\nNameMatchMethododPointAdvisor advisor = new NameMatchMethodMethodPointAdvisor(advice);\nadvisor.setMappedName("invoke");\n'})}),"\n",(0,i.jsx)(t.h3,{id:"regexpmethodpointcutadvisor",children:"RegexpMethodPointcutAdvisor"}),"\n",(0,i.jsx)(t.p,{children:"Only regular expressions can set the corresponding Pointcut, holding an instance of AbstractRegexpMethodPointcut.AbstractRegexpMethodPointPut has two implementation classes, Perl5RegexpMethodPointAdvisor and JdkRegexpMethodMethodPointPointe.Use JdkRegexpMethodPointPut by default. If Perl5RegexpMethodMethodPointPointAdvisor, this can be done by RegexMethodPointAdvisor setPerl5 (boolean)."}),"\n",(0,i.jsx)(t.h3,{id:"defaultbeanfactorypointpointadvisor",children:"DefaultBeanFactoryPointPointAdvisor"}),"\n",(0,i.jsx)(t.p,{children:"DefaultBeanFactoryPointcutAdvisor is bound to BeanFactory, using DefaultBeanFactoryPointAdvisor and to the Spring IC container.Connect the corresponding Advice via the beanName registered in the container.Only when matching points have been successfully matched by instantiated Advice, reduces the coupling between the containers starting the initial advisor and Advice."}),"\n",(0,i.jsx)(t.h3,{id:"introductionadvisor",children:"IntroductionAdvisor"}),"\n",(0,i.jsx)(t.p,{children:"IntroductionAdvisor can only be used for class interdiction, only Advice, but not for any type of Pointcut, and almost no type of Advice, as in PointcutAdvisor."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/8pNE2drJ1BfLn4D.png",alt:"IntroductionAdvisor Class Structure Diagram",title:"IntroductionAdvisortype structure"})}),"\n",(0,i.jsx)(t.h3,{id:"order",children:"Order"}),"\n",(0,i.jsx)(t.p,{children:"For the most part, there will be more than one focus on cross-cutting issues, so there will be multiple advisors in the implementation of the system.Some of these AdvisorPointPut matches the same Joinpoint and executes multiple Advice's horizontal logic at the same Joinpoint.We need to intervene once there is a priority dependency on the Advice logic that needs to be implemented in the same Joinpoint."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/8ohZirCFMmLq46.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:"When dealing with multiple advisors at the same Joinpoint, Spring will be given priority in the specified order.The smaller the order number, the higher the priority, the higher the priority, the higher the priority to be implemented.(By default, Spring will apply them in the order of their declarations, with the first declaration having the smallest number but the largest, second)"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/cnDqxbIEchpBNlz.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:"The various advisory implementation classes have already achieved the Order interface.We can specify enough when using"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<beans>\n    <bean id="permissionAuthAdvisor" class="...PermissionAuthAdvisor">\n        <property name="order" value="1"/>\n        ...\n    </bean>\n\n    <bean id="exceptionBarrierAdvisor" class="...ExceptionBarrierAdvisor">\n        <property name="order" value="0"/>\n        ...\n    </bean>\n</beans>\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var i=n(7294);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);
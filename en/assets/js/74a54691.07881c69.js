"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([[5583],{6217:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var i=r(5893),s=r(1151);const t={title:"IoC Injection Mode 2",sidebar_label:"IoC Injection Mode 2",sidebar_position:2},o=void 0,a={id:"Java/Spring/IoC Inject 1",title:"IoC Injection Mode 2",description:"For the relevant code fromOfficial Source, please see Spring-test org. Spring frame.mylearntest package.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/01-Java/02-Spring/IoC Inject 1.mdx",sourceDirName:"01-Java/02-Spring",slug:"/Java/Spring/IoC Inject 1",permalink:"/en/Java/Spring/IoC Inject 1",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"IoC Injection Mode 2",sidebar_label:"IoC Injection Mode 2",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Sping Core",permalink:"/en/Java/Spring/Spring-Core"},next:{title:"IoC Injection Mode 2",permalink:"/en/Java/Spring/IoC Inject2"}},c={},d=[{value:"Constructor Injection",id:"constructor-injection",level:2},{value:"setter Injection",id:"setter-injection",level:2},{value:"Interface Injection",id:"interface-injection",level:2},{value:"IoC Service Provider",id:"ioc-service-provider",level:2},{value:"BeanFactory Object Registration and Dependencies",id:"beanfactory-object-registration-and-dependencies",level:2},{value:"Direct Encoding",id:"direct-encoding",level:3},{value:"External Profile Method",id:"external-profile-method",level:3}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["For the relevant code from",(0,i.jsx)(n.a,{href:"https://github.com/spring-projects/spring-framework.git",children:"Official Source"}),", please see",(0,i.jsx)(n.a,{href:"https://github.com/Halcyon66/spring-frame-modified/tree/main/spring-test",children:" Spring-test"})," org. Spring frame.mylearntest package."]}),"\n",(0,i.jsx)(n.h2,{id:"constructor-injection",children:"Constructor Injection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Public FXNewsProvider (IFXNewsListner,IFXNewsPersist NewsPerson) $\n    this.newsListner = newsListner;\n    this.newPersistener = newsPerson;\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Advantage\uff1aobjects are ready after the construction has been completed and can be used immediately."}),"\n",(0,i.jsx)(n.li,{children:"Disadvantages: When more objects are dependent, the list of parameters of the construction method is longer.The same type of parameter can be dealt with more difficult and difficult to maintain and use when it comes to the object through reflection constructions.And in Java, construction methods cannot be inherited and default values can not be set.For non-mandatory dependence, multiple construction methods may need to be introduced, and changes in the number of parameters may cause maintenance inconvenience."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"setter-injection",children:"setter Injection"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"FXNewsProvider"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public class FXNewsProvider {\n    private IFXNewsListener newsListener;\n    private IFXNewsPersister newPersistener;\n\n    public IFXNewsListener getNewsListener() {\n    \treturn newsListener;\n    }\n    public void setNewsListener(IFXNewsListener newsListener) {\n    \tthis.newsListener = newsListener;\n    }\n\n    public IFXNewsPersister getNewPersistener() {\n    \treturn newPersistener;\n    }\n    public void setNewPersistener(IFXNewsPersister newPersistener) {\n    \tthis.newPersistener = newPersistener;\n    }\n}\n"})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Advantage\uff1abecause the method can be named, the setter method injects better descriptive than the construction method injected. In addition, setter methods can be inherited, allowing default values to be set and supported by good IDE."}),"\n",(0,i.jsx)(n.li,{children:"The\uff1adisadvantage is, of course, the object cannot be ready as soon as the construction is complete."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"interface-injection",children:"Interface Injection"}),"\n",(0,i.jsxs)(n.p,{children:["In order for the IoC Service Provider to inject the IFXNewsListener, first needs to implement the IFXNewsListener, which will state an injectNewsListner method, the parameter of which is the type of object dependent.Thus, an InjectionServiceContainer object, the corresponding IoCService Provider, can inject a dependency into the FXNewsProvider, using this interface method.\n",(0,i.jsx)(n.img,{src:"https://s2.loli.net/2023/07/15/SNQgVDHi5ruUso3.png",alt:""})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Injection of the shortcut interfaces is a method that is not being promoted very much, largely in a \u201cdecommissioning\u201d.It is intrusive because it forces an object to achieve an unnecessary interface.This is not required for construction methods injection and setter injection."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ioc-service-provider",children:"IoC Service Provider"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"IoC Service Provider's duties are?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Building management of business objects\uff1ain the IoC scenario does not need business objects to be interested in how to build their dependants, but this part of the work always needs someone to do.So IoC Service Provider needs to separate the client's construction logic from the client in order to prevent this logic from polluting the performance of the business object.\nDependent binding\uff1a between business objects"}),"\n",(0,i.jsx)(n.li,{children:"Dependencies of business objects are managed by\uff1aIoC Service Provider to bind the objects on which they depend by linking all business objects built and managed before and by identifying dependencies between business objects, thus ensuring that each business object is ready when it is used."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"How to record dependencies between objects?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"It can record the relationship between the injected object and its dependent object by using the minimum text file;"}),"\n",(0,i.jsx)(n.li,{children:"It can also record the corresponding information through the more descriptive XML file format;"}),"\n",(0,i.jsx)(n.li,{children:"It can also register the corresponding information by writing the code;"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Relationship between Spring IoC Container and IoC Service Provider"}),"\n",(0,i.jsx)(n.p,{children:"Spring's IoC container is an IoC Service Provider, but this is only part of the reason why it is named as IoC. We cannot ignore the \u201cpackaging\u201d. Spring's IoC container is a lightweight container that provides IoC support, in addition to the basic IoC support, which is also provided as a lightweight container.For example, on Spring's IoC container, Spring also provides the corresponding AOP framework support, enterprise level service integration, etc."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://s2.loli.net/2023/07/15/WX5mDwzVoFylCJZ.png",alt:"IoC Container and Provider",title:"IoC Container and Provider"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Spring offers BeanFactory and ApplicationContext"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"BeanFactory: Base type IoC container, providing full IoC service support.If no special specifies, default delay initialization strategy (lazy-load\n).Initialize and rely on injections only when client objects need access to a managed object in the container.As a result, the containers are relatively fast initiated, and the resources required are limited.For limited resources and less stringent functional requirements, BeanFactory is the more appropriate IoC container selection."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"ApplicationContext: ApplicationContext is built on BeanFactory, a relatively advanced container and is provided with other advanced features such as event publication, support for internationalization and so on, in addition to all support from BeanFactory. Objects managed by ApplicationContext, by default all initialization and binding after the container of this type is started.So the ApplicationContext requires more system resources than BeanFactory, and since all initialization is completed at startup, the container will start longer than BeanFactory.In scenarios where the system is well resourced and requires more functionality, the packagings of the ApplicationContext type are more appropriate."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"As the basic IoC container provided by Spring, BeanFactory can perform all functions as IoC Service Provider, including registration of business objects and binding of inter-object dependence."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"beanfactory-object-registration-and-dependencies",children:"BeanFactory Object Registration and Dependencies"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"Overall Design Dependency"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// 1-\u8bbe\u8ba1FXNewsProvider\u7c7b\u7528\u4e8e\u666e\u904d\u7684\u65b0\u95fb\u5904\u7406\npublic class FXNewsProvider{\n//...\n}\n// 2-\u8bbe\u8ba1IFXNewsListener\u63a5\u53e3\u62bd\u8c61\u5404\u4e2a\u65b0\u95fb\u793e\u4e0d\u540c\u7684\u65b0\u95fb\u83b7\u53d6\u65b9\u5f0f\uff0c\u5e76\u7ed9\u51fa\u76f8\u5e94\u5b9e\u73b0\u7c7b\npublic interface IFXNewsListener{\n//...\n}\n// \u4ee5\u53ca\npublic class DowJonesNewsListener implements IFXNewsListener {\n//...\n}\n// 3-\u8bbe\u8ba1IFXNewsPersister\u63a5\u53e3\u62bd\u8c61\u4e0d\u540c\u6570\u636e\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5e76\u5b9e\u73b0\u76f8\u5e94\u7684\u5b9e\u73b0\u7c7b\npublic interface IFXNewsPersister {\n//...\n} \n// \u4ee5\u53ca\npublic class DowJonesNewsPersister implements IFXNewsPersister { \n//...\n}\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"direct-encoding",children:"Direct Encoding"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"1. Registering and binding FX news classes by using BeanFactory directly to encode"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.beanf;\n\nimport org.springframework.beans.MutablePropertyValues;\nimport org.springframework.beans.PropertyValue;\nimport org.springframework.beans.factory.BeanFactory;\nimport org.springframework.beans.factory.support.AbstractBeanDefinition;\nimport org.springframework.beans.factory.support.BeanDefinitionRegistry;\nimport org.springframework.beans.factory.support.DefaultListableBeanFactory;\nimport org.springframework.beans.factory.support.RootBeanDefinition;\nimport org.springframework.mylearntest.before.FXNewsProvider;\n\npublic class BeanFactoryFX {\n    public static void main(String[] args) {\n        DefaultListableBeanFactory beanRegistry = new DefaultListableBeanFactory();\n        BeanFactory container = bindViaCode(beanRegistry);\n        FXNewsProvider newsProvider = (FXNewsProvider)container.getBean("djNewsProvider");\n        newsProvider.getAndPersistNews();\n    }\n\n    // \u56e0\u4e3a\u4f20\u5165\u7684DefaultListableBeanFactory\u540c\n    // \u65f6\u5b9e\u73b0\u4e86BeanFactory\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5\uff0c\u8fd9\u6837\u505a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e0d\u4f1a\u51fa\n    // \u73b0\u95ee\u9898\u3002\u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5355\u7eaf\u7684BeanDefinitionRegistry\u662f\u65e0\u6cd5\u5f3a\u5236\u8f6c\u6362\u5230BeanFactory\n    // \u7c7b\u578b\u7684\uff01\n    public static BeanFactory bindViaCode(BeanDefinitionRegistry registry) {\n        AbstractBeanDefinition newsProvider = new RootBeanDefinition(FXNewsProvider.class, 0, true);\n        AbstractBeanDefinition newsListener = new RootBeanDefinition(DowJonesNewsListener.class,0, true);\n        AbstractBeanDefinition newsPersister = new RootBeanDefinition(DowJonesNewsPersister.class, 0,true);\n        // 1.\u5c06bean\u5b9a\u4e49\u6ce8\u518c\u5230\u5bb9\u5668\u4e2d\n        registry.registerBeanDefinition("djNewsProvider", newsProvider);\n        registry.registerBeanDefinition("djListener", newsListener);\n        registry.registerBeanDefinition("djPersister", newsPersister);\n        // 2.0 \u6307\u5b9a\u4f9d\u8d56\u5173\u7cfb\n        // 2.1 \u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6ce8\u5165\u65b9\u5f0f\n        /*ConstructorArgumentValues argValues = new ConstructorArgumentValues();\n        argValues.addIndexedArgumentValue(0, newsListener);\n        argValues.addIndexedArgumentValue(1, newsPersister);\n        newsProvider.setConstructorArgumentValues(argValues);*/\n        // 2.2 \u6216\u8005\u901a\u8fc7setter\u65b9\u6cd5\u6ce8\u5165\u65b9\u5f0f\n        // \u4f7fnewsListener newPersistener\u7ed1\u5b9a\u5230newsProvider\u4e0a\n        MutablePropertyValues propertyValues = new MutablePropertyValues();\n        propertyValues.addPropertyValue(new PropertyValue("newsListener",newsListener));\n        propertyValues.addPropertyValue(new PropertyValue("newPersistener",newsPersister));\n        newsProvider.setPropertyValues(propertyValues);\n        // 3.0 \u7ed1\u5b9a\u5b8c\u6210 \n        return (BeanFactory)registry;\n    }\n}\n'})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"2. Design the IFXNewsListeners interface to abstract different news acquisition methods for news agencies and give class"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.before;\n\npublic interface IFXNewsListener {\n    String[] getAvailableNewsIds();\n\n    FXNewsBean getNewsByPK(String newsId);\n\n    void postProcessIfNecessary(String newsId);\n}\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.beanf;\n\nimport org.springframework.mylearntest.before.FXNewsBean;\nimport org.springframework.mylearntest.before.IFXNewsListener;\n\npublic class DowJonesNewsListener implements IFXNewsListener {\n    @Override\n    public String[] getAvailableNewsIds() {\n        return new String[0];\n    }\n\n    @Override\n    public FXNewsBean getNewsByPK(String newsId) {\n        return null;\n    }\n\n    @Override\n    public void postProcessIfNecessary(String newsId) {\n\n    }\n}\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"3. \u8bbe\u8ba1IFXNewsPersister\u63a5\u53e3\u62bd\u8c61\u4e0d\u540c\u6570\u636e\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5e76\u5b9e\u73b0\u76f8\u5e94\u7684\u5b9e\u73b0\u7c7b"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.before;\n\npublic interface IFXNewsPersister {\n    void persistNews(FXNewsBean newsBean);\n}\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.beanf;\n\nimport org.springframework.mylearntest.before.FXNewsBean;\nimport org.springframework.mylearntest.before.IFXNewsPersister;\n\npublic class DowJonesNewsPersister implements IFXNewsPersister {\n    @Override\n    public void persistNews(FXNewsBean newsBean) {\n\n    }\n}\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"4. Design news providers rely on news listener and persistent class"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.before;\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n\npublic class FXNewsProvider {\n    private IFXNewsListener newsListener;\n    private IFXNewsPersister newPersistener;\n    public FXNewsProvider(IFXNewsListener newsListner,IFXNewsPersister newsPersister) {\n        this.newsListener = newsListner;\n        this.newPersistener = newsPersister;\n    }\n\n    public IFXNewsListener getNewsListener() {\n        return newsListener;\n    }\n\n    public void setNewsListener(IFXNewsListener newsListener) {\n        this.newsListener = newsListener;\n    }\n\n    public IFXNewsPersister getNewPersistener() {\n        return newPersistener;\n    }\n\n    public void setNewPersistener(IFXNewsPersister newPersistener) {\n        this.newPersistener = newPersistener;\n    }\n\n    public FXNewsProvider() {\n    }\n\n    public void getAndPersistNews() {\n        String[] newsIds = newsListener.getAvailableNewsIds();\n        if (ArrayUtils.isEmpty(newsIds)) {\n            return;\n        }\n        for (String newsId : newsIds) {\n            FXNewsBean newsBean = newsListener.getNewsByPK(newsId);\n            newPersistener.persistNews(newsBean);\n            newsListener.postProcessIfNecessary(newsId);\n        }\n    }\n}\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"5. Set news class"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.before;\n\npublic class FXNewsBean {\n}\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"external-profile-method",children:"External Profile Method"}),"\n",(0,i.jsx)(n.p,{children:"Normally, there is a need to give the corresponding BeanDefinitionReader implementation class according to different external configuration file formats, with BeanDefinitiReader responsible for reading and mapping the config file content to BeanDefinitis, and then registering BeanDefinition, after which the BeanDefinitionRegistry, completes the registration and loading of Bean.Much of the work, including the parsing of document formats and the assembling of Bean Definition, is carried out by the corresponding delivery class of BeanDefinitiReader, which is only responsible for maintenance."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Properties Profile"})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"binding-config.properties"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-properties",children:"djNewsProvider. (class)=org.springframe.mylearntest.ioc.directcode.FXNewsProvider\ndjNewsProvider.$0(ref)=djListener\ndjNewsProvider.$1(ref)=djPersonister\n# djNewsProvider.newsListener(ref)=djListener\n# djNewsProvider.newPersonistener(ref)=djPersistener (ref)=djPersistenter\ndjListener.class=org.springframe.myLearntest.ioc.propconfig.DjNewsListener\ndjPervister.class)=org.springframe.myLearntest.ioc.propconfig\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"PropConfigTest"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.directcode;\n\nimport org.springframework.beans.factory.BeanFactory;\nimport org.springframework.beans.factory.support.BeanDefinitionRegistry;\nimport org.springframework.beans.factory.support.DefaultListableBeanFactory;\nimport org.springframework.beans.factory.support.PropertiesBeanDefinitionReader;\n\npublic class PropConfigTest {\n    public static void main(String[] args) {\n        // todo Caused by: java.lang.IllegalStateException: No bean class specified on bean definition\n        DefaultListableBeanFactory beanRegistry = new DefaultListableBeanFactory();\n        BeanFactory container = bindViaPropertiesFile(beanRegistry);\n        FXNewsProvider newsProvider =\n                (FXNewsProvider)container.getBean("djNewsProvider");\n        newsProvider.getAndPersistNews();\n    }\n\n    public static BeanFactory bindViaPropertiesFile(BeanDefinitionRegistry registry) {\n        PropertiesBeanDefinitionReader reader =\n                new PropertiesBeanDefinitionReader(registry);\n        reader.loadBeanDefinitions("classpath:binding-config.properties");\n        return (BeanFactory)registry;\n    }\n}\n'})})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"@predated as of 5.3, in favorable of Spring's common bean definition forms"}),"\n",(0,i.jsx)(n.p,{children:"References"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The book name\uff1aSpring revelator\uff1a"}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>o});var i=r(7294);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);
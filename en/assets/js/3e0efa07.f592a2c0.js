"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([[2415],{427:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(5893),o=n(1151);const r={title:"AspectJ AOP",sidebar_label:"AspectJ AOP",sidebar_position:13},a=void 0,s={id:"Java/Spring/AspectJ AOP",title:"AspectJ AOP",description:"\u672c\u6587\u76f8\u5173\u4ee3\u7801(\u6765\u81ea\u5b98\u65b9\u6e90\u7801spring-test\u6a21\u5757)\u8bf7\u53c2\u89c1spring-framework org.springframework.mylearntest\u5305\u4e0b\u3002",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/01-Java/02-Spring/AspectJ AOP.mdx",sourceDirName:"01-Java/02-Spring",slug:"/Java/Spring/AspectJ AOP",permalink:"/en/Java/Spring/AspectJ AOP",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{title:"AspectJ AOP",sidebar_label:"AspectJ AOP",sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Spring AOP\u7684\u7ec7\u51652",permalink:"/en/Java/Spring/Spring AOP Woven2"},next:{title:"Schema based AOP Configuration",permalink:"/en/Java/Spring/AOP Configuration of Schema"}},c={},p=[{value:"Two ways to weave into Aspects",id:"two-ways-to-weave-into-aspects",level:2},{value:"Programming Weave",id:"programming-weave",level:3},{value:"Win with auto-proxy",id:"win-with-auto-proxy",level:3},{value:"Point in @AspectJ",id:"point-in-aspectj",level:2},{value:"@AspectJ Pointdeclaration mode",id:"aspectj-pointdeclaration-mode",level:3},{value:"Identifier of AspectJ form Pointcut expression",id:"identifier-of-aspectj-form-pointcut-expression",level:3},{value:"Execution",id:"execution",level:4},{value:"within",id:"within",level:4},{value:"This and target",id:"this-and-target",level:4},{value:"args",id:"args",level:4},{value:"annotation",id:"annotation",level:4},{value:"Advice in @AspectJ",id:"advice-in-aspectj",level:2},{value:"Spring 2.0 based on XSD various Advices",id:"spring-20-based-on-xsd-various-advices",level:4},{value:"Introduction",id:"introduction",level:4},{value:"Order of Advice&#39;s execution",id:"order-of-advices-execution",level:4},{value:"Aspect instantiation mode",id:"aspect-instantiation-mode",level:3}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["\u672c\u6587\u76f8\u5173\u4ee3\u7801(\u6765\u81ea",(0,i.jsx)(t.a,{href:"https://github.com/spring-projects/spring-framework.git",title:"\u5b98\u65b9\u6e90\u7801",children:"\u5b98\u65b9\u6e90\u7801"}),"spring-test\u6a21\u5757)\u8bf7\u53c2\u89c1",(0,i.jsx)(t.a,{href:"https://github.com/Halcyon666/spring-framework-modified/tree/main/spring-test",children:"spring-framework"})," org.springframework.mylearntest\u5305\u4e0b\u3002"]}),"\n",(0,i.jsx)(t.p,{children:"There is no need to implement the corresponding interface as 1.0, the only thing to do is to add a @Aspect annotation to this Aspect.This will make it possible to determine which classes in ClassPath are the description of the aspect we are looking for.Define Point through @Pointcut, and specify which legal aspects of Advice's logic are defined by a comment such as Around."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"PerformanceTraceAsp"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'package org.springframe.mylearntest.aop2.aspectj;\n\nimport org.apache.commons.lang3.time.StopWatch;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.\nimport org. spectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\n\n/**\n * @Author: whaleall\n * @Date: 20/7/28 22:46\n * Spring 2. Then there is no need to implement the interface definition point\n */\n@Asp\npublic class PerformanceTraceAspt\n\tprivate final Logger = LogFactory. etLog(PerformanceTraceAspect.class);\n\n\t@Pointcut("execution(public void *.method1() )|| execution(public void*). ethod2()")\n\tpublic voice pointName() {}\n\n\t@Around("pointname()")\n\tpublic object performanceTrace(ProceedingingPoint joininPoint) throughout throable\n\t\tStopWatch sw = new StopWatch();\n\t\ttry 6\n\t\t\tsw. tart();\n\t\t\treturn joinPoint.proceed();\n\t\t} finally\n\t\t\t\tSystem.out.println("pt in method["\n\t\t\t\t\t\t+ joinPoint. etSignature().getName()\n\t\t\t\t+ "]>>>>>>>>" + sw.toString());\n\t\t}\n\t}\n}\n'})})]}),"\n",(0,i.jsx)(t.h2,{id:"two-ways-to-weave-into-aspects",children:"Two ways to weave into Aspects"}),"\n",(0,i.jsx)(t.p,{children:"If we have one target object Foo, there are two ways to weave the aspect definition into this target object class and to intercept Joinpoint that meets the Pointcut."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Foo"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'public class Foo {\n\tpublic void method1() {\n\t\tSystem.out.println("method1 executed");\n\t}\n\n\tpublic void method2() {\n\t\tSystem.out.println("method2 executed");\n\t}\n}\n'})})]}),"\n",(0,i.jsx)(t.h3,{id:"programming-weave",children:"Programming Weave"}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)("summary",{children:"implements"})," via AspectJProxyFactory"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"public class Test4AspectJProxyFactory {\n\tpublic static void main(String[] args) {\n\t\tAspectJProxyFactory weaver = new AspectJProxyFactory();\n\t\tweaver.setProxyTargetClass(true);\n\t\tweaver.setTarget(new Foo());\n\t\tweaver.addAspect(PerformanceTraceAspect.class);\n\t\tObject proxy = weaver.getProxy();\n\t\t((Foo)proxy).method1();\n\t\t((Foo)proxy).method2();\n\t}\n}\n"})})]}),"\n",(0,i.jsx)(t.h3,{id:"win-with-auto-proxy",children:"Win with auto-proxy"}),"\n",(0,i.jsx)(t.p,{children:"For the @AspectJ style, Spring AOP provides an AutoProxyCreator implementation class to avoid too much coding and configuration work, an extension based on AbstractAdvisor AutoProxyCreator."}),"\n",(0,i.jsx)(t.p,{children:"Like AutoProxyCreator, we need to register the AnnotationAwateAspectJAutoProxyCreator in the IoC Container."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/hrGdFWtgxbfa78l.png",alt:""})}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"xml configuration"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<beans xmlns="http://www.springframework.org/schema/beans"\n\t   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\t   xmlns:aop="http://www.springframework.org/schema/aop"\n\t   xsi:schemaLocation="http://www.springframework.org/schema/beans\n\t\thttp://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n\n\t\t http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">\n\n\t<aop:aspectj-autoproxy proxy-target-class="true"/>\n\t\x3c!---same line ->\n\t<!-<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator">\n\t\t<property name="proxyTargetClass" value="true"/>\n\t</bean>->\n\n\t<bean id="performanceAspect" class="org.springframework.mylearntest.aop2.aspectj.PerformanceTraceAspect"/>\n\n\t<bean id="target" class="org.springframework.mylearntest.aop2.aspectj.Foo"/>\n</beans>\n'})})]}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"TestAutoAspectJ"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'Public class Test4AutoAspectJ Fum\n\tpublic stance main(String[] args) um\n\t\tApplicationContext = new ClassPathXmlApplicationContext("annotationawareaspectJautoproxycreor\\\\annotatiowareaspectJautoxycreator. ml");\n\t\tObject proxy = context.getBean("target");\n\t\t(Foo)proxy).method1();\n\t\t(Foo)proxy).method2();\n\t}\n}\n'})})]}),"\n",(0,i.jsx)(t.p,{children:"If the target is injected into the other bean definition as dependent, the dependent subject is in possession of the proxy target object."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Tip"})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"When using an AOP, in the form of @AspectJ, automatic proxy support in the container should be used as much as possible. Normally, programming methods will be used only for test purposes. In the course of use, you will find that in practice the two are different and some behaviour is not uniform."}),"\n",(0,i.jsx)(t.p,{children:"The AOP, in the form of @Perspectjweaver.jar and aspectjrt.jar, needs to be introduced."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"point-in-aspectj",children:"Point in @AspectJ"}),"\n",(0,i.jsx)(t.p,{children:"Prior to the release of version 2.0 of the Spring Framework, Spring AOP had no formal Pointcut description language like AspectJ, and supported only method level interception.Normally, therefore, simple methodological naming and regular expressions can serve their purpose very well."}),"\n",(0,i.jsx)(t.p,{children:"After Springrelease version 2.0, the Spring AOP framework integrates part of AspectJ's feature, which includes PerspectJ's language support.Transition from the DTDs to the XSD era."}),"\n",(0,i.jsx)(t.h3,{id:"aspectj-pointdeclaration-mode",children:"@AspectJ Pointdeclaration mode"}),"\n",(0,i.jsx)(t.p,{children:"Pointcut statement in @AspectJ form, attached to @ApectJ, by designating Pointcut\nexpression in the form of AspectJ, it is sufficient to mark this annotation that specifies the corresponding expression to a certain method in the Aspect defined class."}),"\n",(0,i.jsx)(t.p,{children:"Pointcut statement in @AspectJ contains the following two parts."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Pointcut Expression"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Pointcut Expression's carrier is @Pointcut. This annotation is a methodological level annotation, so Pointcut Express cannot be stated separately from one method"})}),"\n",(0,i.jsx)(t.p,{children:"The expression consists of two parts, the Pointcut identifier, and the expression matching pattern."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Point Signature"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"It is a methodological definition that serves as a carrier for Pointcut Expression.The point of Pointcut Signature is legally defined and there are no restrictions other than the return type must be void.The methodological modifier plays the same role in the java language, the public's Pointcut Signature can be cited in other aspects definitions, and private can only be cited in the current Aspect definition.Pointcut Signature can be used as an identifier for the corresponding Pointcut Expression, and the duplicate Pointcut expression can be replaced in the Pointcut Expression."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"YourAsp"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'@Aspt\npublic class YourAspit LO\n    @Pointcut("execution(void method1)")\n    public void method1Execution() {}\n    \n    @Pointcut("method1Execution()")\n    private void sticlMethod1Execution() {}\n\n    //\n}\n'})})]}),"\n",(0,i.jsx)(t.h3,{id:"identifier-of-aspectj-form-pointcut-expression",children:"Identifier of AspectJ form Pointcut expression"}),"\n",(0,i.jsx)(t.h4,{id:"execution",children:"Execution"}),"\n",(0,i.jsx)(t.p,{children:"Using it will help us match Joinpoint with the signature of the specified method, use the following format"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"execution(modifier-pattern? ret-type-pattern declaring-type-pattern? name-pattern(param-pattern) grows-pattern?)"})}),"\n",(0,i.jsx)(t.p,{children:"The return type of the method, the method name, and the parameter parts matching the pattern must be specified and the matching pattern of the other parts can be omitted."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Foo Example"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"public class Foo {\n    public void doSomething(String arg) {\n        // ...\n}\n}\n"})})]}),"\n",(0,i.jsx)(t.p,{children:"You can then specify the following Pointcut expression to match doSomething method of Foo."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"execution(public void Foo.doSomething(String))\n\nexecution(void Foo.doSomething(String))\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"**"})," can be used in matching patterns for any part and can match the adjacent multiple characters*****"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"execution(* *(String))\n\nexecution(* *(*))\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"."})," wildcard can be used in two locations"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"declaring-type-patternn uses specified multiple levels of type declaration"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"// \u53ea\u80fd\u5b9a\u4f4d\u5230cn.spring21\u8fd9\u4e00\u5c42\u4e0b\u7684\u6240\u6709\u7c7b\u578b\nexecution(void cn.spring21.*.doSomething(*) \n\n// \u53ef\u4ee5\u5339\u914d\u5230\u6240\u6709\u7684cn.spring21\u5305\u4e0b\u7684\u5305\u62ec\u5b50\u5b59\u5305\nexecution(void cn.spring21..*.doSomething(*) \n"})}),"\n",(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsx)(t.li,{children:"For the method list matching the location, this means that the method can have 0 to more than one parameter and the parameter type is infinite.If ... for *, only one parameter can be matched."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"Execution (void *.doSomething(...)\n\n// indicates that the first parameter is String, the second parameter is arbitrary type\nexecution (void doSomething(String*)) \n\n// indicates an unlimited parameter format, open-ended type, but the last parameter type must be String\nexecution(void doSomething(..,String)) \n"})}),"\n",(0,i.jsx)(t.h4,{id:"within",children:"within"}),"\n",(0,i.jsx)(t.p,{children:"The within identifier accepts only the type of declaration, which will match all Joinpoint methods under the specified type."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"withinpoint expression"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"within(cn.spring21.aop.target.MockTarget)\n// matches Joinpoint\nwithin (cn.spring21.aop.target.*) \n// matches Joinpoint\nwithin (cn.spring21.aop.*) \n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"withinpoint expression"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"@Retention (RetentionPolicy.RUNTIME)\n@Target ({ElementType.METHOD,ElementType.TYPE})\npublic @interface AnyJoinpoint Annotation {}\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"@AnyJoinpointAnnotation\npublic class Foo\n    public voice method1(){}\n    public voice method2() {}\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["When using the Pointcu's expression ",(0,i.jsx)(t.code,{children:"@withinpoint Annotation"}),", methods such as method1 and method2 in the Foo class are all matched by Pointcu.Since this class indicates @AnyJoinpoint Annotation, other classes will also be matched if they also mark the annotation."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Note that @within only accepts the annotation type and takes effect on the specified annotation type"})}),"\n",(0,i.jsx)(t.h4,{id:"this-and-target",children:"This and target"}),"\n",(0,i.jsx)(t.p,{children:"In AspectJ, this refers to the object of the party in which the method is called, and the target refers to the object in which the method is called, so that these two identifiers can normally be used at the same time.For example, if Object1 and Object2 call a method for Object3\nobjects, the Pointcut expression definition of this (Object2) && target(Object3) will only match when Object2 calls on Object3 and Object1 calls on Object 3."}),"\n",(0,i.jsx)(t.p,{children:"In Spring AOP, this and target denotes semicolon as different from AspectJ, this refers to the proxy object of the target object, while the target is the target."}),"\n",(0,i.jsx)(t.p,{children:"Whether using interface-based or class-based proxy approaches, this is as effective as ProxyInterface and target(ProxyInterface)."}),"\n",(0,i.jsx)(t.p,{children:"If specific types of this are specified (TargetFoo) and target(TargetFoo),target(TargetFoo) are matched to all Joinpoint in the target object, because the target object is indeed the Target Foo type, which is not."}),"\n",(0,i.jsx)(t.p,{children:"This and target identifiers are used together with other identifiers in the Pointcut expression to further enhance the qualified rules for matching"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"execution(void cn.spring21.*.doSometing(*)) && This(TargetFoo)\n\nexecution (void cn.spring21.*.doSometing(*)) && target (ProxyInterface)\n\n/ / / Match both ProxyInterface and ProxyInterface2\nthis (ProxyInterface) && target(proxyInterface2)\n"})}),"\n",(0,i.jsx)(t.p,{children:"There is no big difference between @within and @target in Spring AOP.Only @within is static matching, while @target matches Joinpoint dynamically while running."}),"\n",(0,i.jsx)(t.h4,{id:"args",children:"args"}),"\n",(0,i.jsx)(t.p,{children:"The function of this identifier is to help us capture the method Joinpoint that has the specified parameter type, number of specified parameter data, regardless of the type in which the method is declared.e.g. args(cn.spring21.unveilspring.domain.User) the signature below method will be matched"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"public class Foo {\n    public boolean login(User user) {\n        // ...\n    }\n}\n\npublic class Bar {\n    public boolean isLogin(User user) {\n        // ...\n    }\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To capture a ",(0,i.jsx)(t.code,{children:"public boolean login (Object user)"})," use an expression like ",(0,i.jsx)(t.code,{children:"execution(* *(User))"})," that cannot be captured (because it is a static Point) the args' identifier is required."]}),"\n",(0,i.jsx)(t.p,{children:"Pointcut expression using the @args identifier will check the type of Joinpoint method parameter at the current method level. If this incoming parameter type has a @args annotation, the current Joinpoint will be matched."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/hvlZ4iRWjtozqS3.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"@args will try to perform the specified annotation dynamic check for each method executed by all objects in the system.As long as the type of parameter indicates a @args annotation type, the current method execution will match."})}),"\n",(0,i.jsx)(t.h4,{id:"annotation",children:"annotation"}),"\n",(0,i.jsx)(t.p,{children:"Using an annotation identifier for Pointcut, it will try to check all methods of Joinpoint for all objects in the system.If the detected method indicates the type of annotation specified by the @annotation identifier, the Joinpoint of the current method will be matched by the Pointcut expression."}),"\n",(0,i.jsxs)(t.p,{children:["For the following method to support the transaction mechanism, just note @Transactional on the corresponding method, and use the Pointcut expression to specify ",(0,i.jsx)(t.code,{children:"@annotation(org.springframe.transaction.annotation.Transaction.Transactional)"}),"Note that @Transactionalcomment is defined as ",(0,i.jsx)(t.code,{children:"@Target(ElementType.METHOD)"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Even if the Pointcut expression identifiers in AspectJ can be used in Spring AOP, their terms will differ from the final terms in AspectJ.So, instead of using AspectJ's Pointcut, Spring AOP has borrowed the \u201coverhead\u201d of the language of AspectJ's Pointcut, whereas the underlying language and the final match have followed the original Spring AOP.In addition, Spring AOP may add new identifiers such as bean (...) to the original expression.AspectJ expands the Java language, and Spring AOP\u2019s Pointcut expression now expands AspectJ's Pointcut."})}),"\n",(0,i.jsx)(t.p,{children:"Reverse @AspectJ-form Pointcut in Spring AOP"}),"\n",(0,i.jsx)(t.p,{children:"In fact, all points of statements in @AspectJ form are parsed inside Spring AOP into specific Pointcut objects.Because Spring AOP has its own PointPut definition structure, the @AspectJ statement of these Pointcut expressions will eventually be translated into a Pointcut, specifically for AspectJ."}),"\n",(0,i.jsx)(t.p,{children:"org.springframe.aop.pectj. AspectJExpressionPointPut represents the Pointcut for AspectJ in Spring AOP.Although it uses the corresponding support of AspectJ\n, it follows Spring AOP's Pointcut."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/QXc4awHlyRibeIj.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:"Define ExpressionPositKut and AbstractExpressionPoint primarily for later extension.If there is also a Pointcut of AspectJ's description in a form other than the language, we can build on these two bases."}),"\n",(0,i.jsx)(t.p,{children:"After AspectJProxyFactory or AnnotationAwareAspectJAutoProxyCreator, by reflection, obtained a definition of AspectJ in the form of the @Pointcut, a corresponding AspectJExpressionPoint object is built within the Spring AOP framework.AspectJExpressionPositionPoint internal holds PointPut expression by reflection."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/SlIhfBd7UZtmqEC.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:"AspectJExpressionPoint is one of the Pointcut definitions in Spring AOP. The logic of processing Pointcut matches within the Spring AOP framework does not need to be changed, and the original matching mechanism is still used, namely specific Joinpoint matching work via ClassFilter and MethodMatcher.However, AspectJExpressionPositPut will be entrusted with specific work in the relevant class of the AspectJ library when implementing the methodological logic associated with ClassFilter and MethodMatcher.AspectJExpressionJoinpoint will commission Point Parser in AspectJ library to parse the Pointcut expression it holds in AspectJ.Once the PointcutParser parse is completed, it returns a PointcutExpression object (still a class in the AspectJ library), after which the match is processed directly to entrust this PointcutExpress object."}),"\n",(0,i.jsx)(t.p,{children:"AspectJExpressionPoint is a PointPut implementation for AspectJ, and we can use it like other PointPut implementations in Spring AOP.However, when the construction is completed, don't set the method name or regular expression but instead set the @AspectJ position as shown below"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'AspectJExpressionPoint Point = new AspectJExpressionPoint();\npoint.setExpression("execution( * someMethodName(..)");\n'})}),"\n",(0,i.jsx)(t.h2,{id:"advice-in-aspectj",children:"Advice in @AspectJ"}),"\n",(0,i.jsx)(t.p,{children:"The definition of the @AspectJ form is in effect a common method in the AspectJ definition class using @AspectJ notation except that these methods require an indication of the corresponding description of the different Advice type."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Use Pointcut to set BeforeAdvice"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'/**\n * Using AspectJ Form\n */\n@Aspt\npublic class ResourceSetupAspectJ\n    Private Resource Resource;\n    \n    @Before("execution(boolay*). xecute()")\n    public voice setupResourcesBefore() throats growable F6\n        if(!getResource(). xists()\n            FileUtils.forceMkdir(getResource(). etFile();\n    }\n    // omit getter setter\n}\n'})})]}),"\n",(0,i.jsx)(t.p,{children:"Use Pointcut Signature"}),"\n",(0,i.jsx)(t.p,{children:"Arguments pass in Advice."}),"\n",(0,i.jsx)(t.p,{children:"In some cases, we may need to access the Joinpoint methodological parameters in the Advice definition, and in 1.x we can access the methodological parameters by passing on the Object array via Methodology MethodBeforeAdvice.There are two ways to achieve the same purpose."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Adopts org.aspectj.lang.JoinPoinPoint.In the @AspectJ format, the method of defining Before Advice can declare the first parameter to the org.aspectj.lang.JoinPoint type, with the getArgs() method we can access the parameter value of the corresponding Joinpoint method, and we can use getThis() to get the current proxy object, getTarget() to get the target object."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Bind by args logoThe args logo has been introduced earlier, and we can further limit the Pointcut definition by developing the appropriate object type for it.The args identifier will bind the parameter value corresponding to the name to the Advice method when it accepts not a specific object type, but a parameter name."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Note that the name of the parameter specified by the args must be the same as the parameter name of the method used by Advice.Here the value specified by args and the parameter of the setupResourceBewell method are taskName.If Advice refers to a separate Point definition, the use of args bindings is similar."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"Advice quoted as a separate Point Definition"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'@Pointcut("execution(boolian *.execute(String,...) && args(taskName)")\nprivate void resourcesSetupJoinpoints(Stering taskName) {}\n\n@Before(value="resourceSetupJoinpoints(taskName)")\npublic void setupResourcesBefore(String taskName) Anthropology Throwable{}\n'})})]}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"uses both JoinPoint and args parameter names to bind to feature"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'@Before(value="execution(boolean *.execute(String,...) && args(taskName)")\npublic voice setupResourcesBefore1 (JoinPoint joininpoint, String taskName) throats Throwable\n    // ...\n}\n'})})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Two ways of accessing methodological parameters for Before Advice"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"More than just the first parameter of the approach of Advice in AspectJ's form can be stated as org.aspectj.lang.JoinPoint type, which, in practice, is followed by the remaining Advice-type methodological statements other than Around Advice and Introduction"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Not only the args identifier can be used to bind parameters to the method. In practice, in the execution identifier other than the execution identifier does not directly specify the object type, the object type is originally specified, such as this, target,@within, @target,@within, @target,@annotation,@args,.They, like args, on such occasions if they specify the name of the parameter"})}),"\n",(0,i.jsx)(t.h4,{id:"spring-20-based-on-xsd-various-advices",children:"Spring 2.0 based on XSD various Advices"}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"AspectAdvice"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'package org.springframework.mylearntest.aop2.schemaapsect;\n\nimport org.apache.commons.io.FileUtils;\nimport org.apache.commons.lang3.exception.ExceptionUtils;\nimport org.aspectj.lang.JoinPoint;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.*;\nimport org.springframework.core.io.Resource;\nimport org.springframework.util.StopWatch;\n\n/**\n * @Author: WhaleFall541\n * @Date: 2020/8/13 20:56\n */\n@Aspect\npublic class AspectAdvice {\n    private Resource resource;\n\n    public Resource getResource() {\n        return resource;\n    }\n\n    public void setResource(Resource resource) {\n        this.resource = resource;\n    }\n\n    @AfterThrowing(pointcut = "execution(boolean *.execute(String, ..))", throwing = "e")\n    public void afterThrowing(RuntimeException e) {\n        final String exceptionMsg = ExceptionUtils.getStackTrace(e);\n        // ...\n    }\n\n    @AfterReturning(value = "execution(boolean *.execute(String, ..))",returning = "retValue")\n    public void taskExceptionCompleted(JoinPoint jp,boolean retValue) {\n        //Class clazz = jp.getTarget().getClass();\n        //getSqlMapClientTemplate().insert("BATCH.insertTaskStatus", clazz.getName());\n    }\n\n    @After("execution(boolean *.execute(String, ..))")\n    public void cleanUpResourcesIfNecessary() throws Throwable {\n        if (getResource().exists())\n            FileUtils.forceMkdir(getResource().getFile());\n    }\n\n    @Around("execution(boolean *.execute(String, ..))")\n    public Object performanceTrace(ProceedingJoinPoint pjp) throws Throwable {\n        StopWatch watch = new StopWatch();\n        try {\n            watch.start();\n            return pjp.proceed();\n        } finally {\n            watch.stop();\n            System.out.println("watch.toString() = " + watch.toString());\n        }\n    }\n}\n'})})]}),"\n",(0,i.jsx)(t.h4,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"In Spring, the introduction is implemented by adding a new logic of behaviour to the target object with a new interface.To declare introduction in @AspectJ, we need to state an example variable in Aspect that the type corresponds to the additional interfaces type, which is then labelled using org.aspectj.lang.annotatioin.DeclarationParts.Specify the implementation class of the new interface definition via @DeclarePartes and the target object to be added to it."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"IntroductionAsp"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'package org.springframe.mylearntest.aop2.introduction;\n\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.DeclareParts;\nimport org.springframe.mylearntest.aop1.weaver.proxyfactorybean.CounterImpl;\nimport org.springframe.mylearnt. op1.weaver.proxyfactorybean. Counter;\n\n/**\n * @Author: WhaleFall541\n * @Date: 20/8/9 16:50\n * Attach ICounter Behavior Introduction to ITask\n */\n@Asp\npublic class IntroductionAsp\n\t// valueAttribute specifies an object to be applied to, Can value all classes under a certain package="cn. pring21.unveilspring.service.*"\n\t// Specify the implementation class of the new interface definition via defaultImpl, where ICounter delivers org.springframe.mylearntest.aop1.weaver.proxyfactorybean.CounterImpl\n\t@DeclareParts(value = "org.springframe.mylearntest.aop1.weaver.baseinterface.MockTask", defaultImpl =\n\t\t\tCounterImpl.class)\n\tPublic Counter counter;// ICounter is the object type\n}\n'})})]}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"xml configuration"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n\t   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\t   xmlns:context="http://www.springframework.org/schema/context"\n\t   xsi:schemaLocation=\n\t\t\t   "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n\t\t\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd\n              \t  http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd"\n\t   xmlns:aop="http://www.springframework.org/schema/aop">\n\n\t<aop:aspectj-autoproxy proxy-target-class="true"/>\n\n\t<bean id="task" class="org.springframework.mylearntest.aop1.weaver.baseoninterface.MockTask" scope="prototype"/>\n\n\t<bean id="counterIntroduction" class="org.springframework.mylearntest.aop2.introduction.IntroductionAspect"/>\n</beans>\n'})})]}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"IntroductionAsp"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'package org.springframe.mylearntest.aop2.introduction;\n\nimport org.springframe.context.ApplicationContext;\nimport org.springframe.context.Support.ClassPathXmlApplicationContext;\nimport org.springframe.mylearntest.aop1.weaver.proxyfactorybean. Counter;\n\n/**\n * @Author: WhaleFall541\n * @Date: 20/8/9 17:10\n */\npublic class Test4InductionAspt\n\tpublic static void main(String[] args) $6\n\t\tApplicationContext = new ClassPathXllApplicationContext("introductionspect/introductionspect. ml");\n\t\tObject task1 = context.getBean("task");\n\t\tObject task2 = context.getBean("task");\n\n\t\tSystem.out.println((ICounter)task1). eCounter(); //1\n\t\tSystem.out.println((ICounter)task1.getCounter()); /2\n\t\tSystem.out.println((ICounter) task2).getCounter()); / 1\n\t}\n}\n'})})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Note that Introduction belongs to a per-instance type of Advice, so don't forget that the target object's screen should normally be set to prototype*"})}),"\n",(0,i.jsx)(t.h4,{id:"order-of-advices-execution",children:"Order of Advice's execution"}),"\n",(0,i.jsx)(t.p,{children:"If multiple Advices matching the same Joinpoint state that they are in the same aspect definition, the order of implementation of these Advices is determined by the order of their declaration in Aspect.The first declared Advice has the highest priority.In the case of Before Advice, the first operation with the highest priority, while in the case of AfterReturningAdvice, the highest priority is the final operation."}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:"MultiAdviceAsp"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'package org.springframework.mylearntest.aop2.priorityofadvice;\n\nimport org.aspectj.lang.annotation.AfterReturning;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Before;\nimport org.aspectj.lang.annotation.Pointcut;\n\n/**\n * @Author: WhaleFall541\n * @Date: 2020/8/9 18:00\n * \u5982\u679c\u5c06\u8be5AspectJ\u7ec7\u5165\u76ee\u6807\u5bf9\u8c61\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u4e3a\n * before one\n * before two\n * after returning two\n * after returning one\n */\n@Aspect\npublic class MultiAdviceAspect {\n\t@Pointcut("execution(boolean *.execute(String, ..))")\n\tpublic void taskExecution(){}\n\n\t@Before("taskExecution()")\n\tpublic void beforeOne() {\n\t\tSystem.out.println("before one");\n\t}\n\n\t@Before("taskExecution()")\n\tpublic void beforeTwo() {\n\t\tSystem.out.println("before two");\n\t}\n\n\t@AfterReturning("taskExecution()")\n\tpublic void afterReturningOne() {\n\t\tSystem.out.println("after retuning one");\n\t}\n\n\t@AfterReturning("taskExecution()")\n\tpublic void afterReturningTwo() {\n\t\tSystem.out.println("after retuning two");\n\t}\n}\n'})})]}),"\n",(0,i.jsx)(t.p,{children:"When these Advice statements are in different Aspects.If multiple Advice statements match the corresponding Pointcut definition with one Joinpoint but they are not the same one aspect.We need to use the org.springframe.core.Ordered interface to Spring. It is sufficient to allow the corresponding Aspect definition to achieve the Ordered, otherwise the order of Advice's execution is uncertain."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/NoimsEaDcIgdwMp.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Note: If these aspects are used by programming, the order of Advice's execution in Aspect is determined entirely by the order added to AspectJProxyFactory rather than by the order of the Ordered interface.If the order of the following code is used, then Advice in AnotherAspect will have priority over Advice's in MultiAdviceAspect."})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://s2.loli.net/2023/07/15/aXrGAu1x6KwJgBj.png",alt:""})}),"\n",(0,i.jsx)(t.h3,{id:"aspect-instantiation-mode",children:"Aspect instantiation mode"}),"\n",(0,i.jsx)(t.p,{children:"For each aspect registered to a container, its default instantiation mode is singleton, which instantiates in the container and holds a single instance as defined by each aspect (behaviour coincides with the behaviour of the container singleton-scope)"}),"\n",(0,i.jsx)(t.p,{children:"In addition to instantiating mode, AspectJ supports instantiation models such as perthis, pertarget, percflowlow, percflowbelow and perwithin, but after Spring2.0 AOP supports only the default singleton, perthis and pertarget..."}),"\n",(0,i.jsx)(t.p,{children:"To specify an instantiation mode for each aspect you can specify a perthis or pertarget statement via @Aspect.If you want MultiAdviceAspect instantiation mode to change from the default singleton to perthis.Can be specified as follows"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'@Aspect("perthis(execution(boolean *.execute(String, ..)))")\npublic class MultiAdviceAspect {\n\n    @Pointcut("execution(boolean *.execute(String, ..))")\n    public void taskExecution(){}\n    \n    // ..\n\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Once perthis-specified Pointcut definitions matched, each aspect instance will be instantiated for the corresponding proxy object.For pertarget, it is for matching individual target objects to instantiate the corresponding aspect.However, once perthis or pertarget has been used to designate the Aspect instantiation mode, these aspects cannot be registered to the container, but no exception can be made by defining the screen of singleton for their bean."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"References:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Books Wang Guang-Spring"}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var i=n(7294);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);
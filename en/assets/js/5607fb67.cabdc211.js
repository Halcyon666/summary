"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([[5070],{7702:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(5893),a=t(1151);const i={title:"Joinpoint",sidebar_label:"Joinpoint",sidebar_position:7},s=void 0,o={id:"Java/Spring/Joinpoint",title:"Joinpoint",description:"For the relevant code fromOfficial Source, please see Spring-test org. Spring frame.mylearntest package.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/01-Java/02-Spring/Joinpoint.mdx",sourceDirName:"01-Java/02-Spring",slug:"/Java/Spring/Joinpoint",permalink:"/en/Java/Spring/Joinpoint",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Joinpoint",sidebar_label:"Joinpoint",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"ApplicationContext",permalink:"/en/Java/Spring/ApplicationContext"},next:{title:"Spring AOP\u4e2d\u7684Pointcut",permalink:"/en/Java/Spring/Spring AOP Pointcut"}},l={},c=[{value:"AOP Implementation in JAVA",id:"aop-implementation-in-java",level:2},{value:"Joinpoint",id:"joinpoint",level:2},{value:"Static Proxy",id:"static-proxy",level:3},{value:"Dynamic Proxy",id:"dynamic-proxy",level:3},{value:"CGLIB byte code generation",id:"cglib-byte-code-generation",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["For the relevant code from",(0,r.jsx)(n.a,{href:"https://github.com/spring-projects/spring-framework.git",children:"Official Source"}),", please see",(0,r.jsx)(n.a,{href:"https://github.com/Halcyon66/spring-frame-modified/tree/main/spring-test",children:" Spring-test"})," org. Spring frame.mylearntest package."]}),"\n",(0,r.jsx)(n.h2,{id:"aop-implementation-in-java",children:"AOP Implementation in JAVA"}),"\n",(0,r.jsx)(n.p,{children:"Unique reference is made to AOL (Aspect-Oriented Language), other Aspectj"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"AspectC"}),"\n",(0,r.jsx)(n.li,{children:"AspectC++"}),"\n",(0,r.jsx)(n.li,{children:"Aspect.Net"}),"\n",(0,r.jsx)(n.li,{children:"AspectL(Lisp)"}),"\n",(0,r.jsx)(n.li,{children:"AspectPHP"}),"\n",(0,r.jsx)(n.li,{children:"......"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"AOP in JAVA"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Dynamic Proxy"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"During runtime the proxy object is generated for the corresponding interface dynamic, encapsulating the horizontal focus logic to the dynamic agent InvocationHandler and then woven into the proxies class on the basis of the block position that the horizontal focus needs to be woven during the system operation."}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Dynamic Byte Boost"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use the Java library like ASM or CGLIB to build the byte code class dynamically while the program is running."}),"\n",(0,r.jsx)(n.li,{children:"The technology is woven through dynamic byte codes to reinforce the horizontal logic by creating the corresponding subcategories for these system module classes, while the horizontal logic is added to these subclasses, so that these dynamic subclasses are used during application execution to achieve the purpose of blowing the horizontal logic into the system."}),"\n",(0,r.jsx)(n.li,{children:"If the category needs to be extended and the instance method in the class is declared final, it cannot be subtyped into the extension.Spring AOP will use the dynamic bytes of the CGLIB library to enhance the AOP extension when dynamic proxies are not available."}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"java code generation"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The EJB container provides information based on the deployment descriptor file and generates the java code for the corresponding functional module class based on the information provided by the descriptor and then compiles the java code via the deployment tool or the deployment of the interface.The functional module class deployed to the EJB container will then work properly."}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Custom Class Loader"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All Java classes must be loaded into the Java virtual machine through the corresponding class loader before they can run.The default class loader will read class-byte files and then parse and load these class\nfiles into the virtual machine in accordance with class-byte specification.Had I been able to blend AOP and OPP when I have been loaded into a virtual machine during this class running?"}),"\n",(0,r.jsx)(n.li,{children:"We can do the horizontal logic to the system by customizing the class loader. The custom class loader can be added to the existing logic of the system block class during loading of the class and handing over the changed class to the java\nvirtual machine for running.By way of class loaders, we can basically weave many number of classifications and corresponding examples, which are certainly much more powerful than the previous ones.The biggest problem with this approach, however, is the use of the class loader itself.Some application servers control the entire class load system, so in such a scenario there is a problem."}),"\n",(0,r.jsx)(n.li,{children:"Both the Jblos AOP and the AspectWerkz framework that has been merged into the AspectJ project are implemented using a custom class loader."}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:"AOL Extension"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The AOL extension is one of the most powerful and difficult to grasp, as we mentioned earlier in AspectJ.In this approach, AOP's concepts have in most cases a corresponding entity in AOL.We can use the extended AOL to implement any AOP concept entity or even OPP\nconcept entities, such as Aspects and Classs.All AOP concepts are best expressed in AOL."}),"\n",(0,r.jsxs)(n.li,{children:['The adoption of the expanded AOL is an example of the expression of the AOP\'s concept, which allows all the horizontal focus logic that AOPs are involved to survive in their own \u201cnational\u201d ways before being woven up.And features like "Compilation to Static Classes", "java\nVM can load files and run with AO components woven into the corresponding logical".This method requires learning an expanded ',(0,r.jsx)(n.code,{children:"AOL"})," language."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://s2.loli.net/2023/07/15/lArHhiuGkVqd4Nm.png",alt:""})}),"\n",(0,r.jsx)(n.h2,{id:"joinpoint",children:"Joinpoint"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Joinpoint"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Pointcut dot expression"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Directly specify the method name of Joinpoint"}),"\n",(0,r.jsx)(n.li,{children:"Regular expression\uff1aJfoss, Spring AOP, AspectWerkz, etc."}),"\n",(0,r.jsx)(n.li,{children:"After using the specific PointPut language\uff1aSpring 2.0, support the use of AspectJ's Pointcut expression language to specify Pointcut."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://s2.loli.net/2023/07/15/ZeYxB1TENhjXPRt.png",alt:""})}),"\n",(0,r.jsx)(n.h3,{id:"static-proxy",children:"Static Proxy"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"IRequestable"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.aop.staticproxy;\n\npublic interface IRequestable {\n    void request();\n}\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.aop.staticproxy;\n\npublic class RequestableImpl implements IRequestable{\n    @Override\n    public void request() {\n        System.out.println(" request process in RequestableImpl");\n    }\n}\n'})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"ServiceControlRequestableProxy"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.aop.staticproxy;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class ServiceControlRequestableProxy implements IRequestable{\n    private static final Logger logger = LoggerFactory.getLogger(ServiceControlRequestableProxy.class);\n    private IRequestable requestable;\n\n    public ServiceControlRequestableProxy(IRequestable target) {\n        this.requestable = target;\n    }\n\n    @Override\n    public void request() {\n        System.out.println("request process in ServiceControlRequestableProxy");\n        requestable.request();\n    }\n\n    public static void main(String[] args) {\n        IRequestable target = new RequestableImpl();// \u9700\u8981\u88ab\u4ee3\u7406\u7684\u5bf9\u8c61\n        IRequestable proxy = new ServiceControlRequestableProxy(target); // \u4ee5\u6784\u9020\u65b9\u6cd5\u5f62\u5f0f\u5c06\u88ab\u4ee3\u7406\u5bf9\u8c61\u4f20\u5165\u4ee3\u7406\u8005\u4e2d\n        proxy.request();// \u8ba9\u4ee3\u7406\u8005\u53bb\u5904\u7406\u8bf7\u6c42\n    }\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"dynamic-proxy",children:"Dynamic Proxy"}),"\n",(0,r.jsx)(n.p,{children:"The Dynamic Agent Mechanism consists mainly of one class and one interface, namely the java.lang.reflect.Proxy and the java.lang.reflect.InvocationHadler interface."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"RequestCtrlInvocationHandler"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.aop.dynamicproxy;\n\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\n\npublic class RequestCtrlInvocationHandler implements InvocationHandler {\n    private Object target;\n\n    public RequestCtrlInvocationHandler(Object target) {\n        this.target = target;\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        System.out.println("reflect invoke before target method");\n        if ("request".equals(method.getName())) {\n            System.out.println("dynamic proxy target method");\n            return method.invoke(target, args);\n        }\n        return null;\n    }\n}\n'})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Test4DynamicProxy"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.aop.dynamicproxy;\n\nimport org.springframework.mylearntest.aop.staticproxy.IRequestable;\nimport org.springframework.mylearntest.aop.staticproxy.RequestableImpl;\n\nimport java.lang.reflect.Proxy;\n\n@SuppressWarnings("rawtypes")\npublic class Test4DynamicProxy {\n    public static void main(String[] args) {\n        // arg1:\u7c7b\u52a0\u8f7d\u5668 arg2:\u63a5\u53e3\u4fe1\u606f arg3:\u5b9e\u73b0InvocationHandler\u7684\u7c7b \u5e76\u4f20\u5165\u9700\u8981\u4ee3\u7406\u7684\u5bf9\u8c61\n        IRequestable requestable = (IRequestable) Proxy.newProxyInstance(\n                Test4DynamicProxy.class.getClassLoader(),\n                new Class[]{IRequestable.class},\n                new RequestCtrlInvocationHandler(new RequestableImpl()));\n        requestable.request();\n    }\n}\n'})})]}),"\n",(0,r.jsx)(n.p,{children:"If you want to learn more about the dynamic agent, please read 'java reflected in action'."}),"\n",(0,r.jsx)(n.h3,{id:"cglib-byte-code-generation",children:"CGLIB byte code generation"}),"\n",(0,r.jsx)(n.p,{children:"The CGLIB extension subclass needs to be used, starting with a net.sf.cglib.proxy.Callpack, but more often we will use the net.sf.cglib.proxy.MethodInterceptor (MethododInterceptor has expanded the Callback interface)."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Requestable"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.aop.CGLIBClassGenerate;\n\npublic class Requestable {\n    public void request(){\n        System.out.println("req in requestable without implement any interface");\n    }\n}\n'})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"RequestCtrlCallback"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package org.springframework.mylearntest.aop.CGLIBClassGenerate;\n\nimport org.springframework.cglib.proxy.MethodInterceptor;\nimport org.springframework.cglib.proxy.MethodProxy;\n\nimport java.lang.reflect.Method;\n\npublic class RequestCtrlCallback implements MethodInterceptor {\n    @Override\n    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {\n        if (method.getName().equals("request")) {\n            System.out.println("proxy generated by cglib intercept method request");\n            return methodProxy.invokeSuper(o, objects);\n        }\n        return null;\n    }\n}\n'})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Test4CGLIB"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"package org.springframework.mylearntest.aop.CGLIBClassGenerate;\n\nimport org.springframework.cglib.proxy.Enhancer;\n\npublic class Test4CGLIB {\n    public static void main(String[] args) {\n        Enhancer enhancer = new Enhancer();\n        enhancer.setSuperclass(Requestable.class);\n        enhancer.setCallback(new RequestCtrlCallback());\n\n        Requestable proxy = (Requestable) enhancer.create();\n        proxy.request();\n    }\n}\n"})})]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>s});var r=t(7294);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunksummary=self.webpackChunksummary||[]).push([[708],{4892:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(5893),o=t(1151);const a={title:"BeanFactoryPostProcessor",sidebar_label:"BeanFactoryPostProcessor",sidebar_position:4},i=void 0,s={id:"Java/Spring/BeanFactoryPostProcessor",title:"BeanFactoryPostProcessor",description:"For the relevant code fromOfficial Codebase spring-test) please seespring-framework org.springframe.mylearntest package.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/01-Java/02-Spring/BeanFactoryPostProcessor.mdx",sourceDirName:"01-Java/02-Spring",slug:"/Java/Spring/BeanFactoryPostProcessor",permalink:"/en/Java/Spring/BeanFactoryPostProcessor",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"BeanFactoryPostProcessor",sidebar_label:"BeanFactoryPostProcessor",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"IoC\u6ce8\u5165\u65b9\u5f0f2",permalink:"/en/Java/Spring/IoC Inject2"},next:{title:"Bean construction process",permalink:"/en/Java/Spring/Bean Creating Process"}},c={},l=[{value:"BeanFactoryPostProcessor",id:"beanfactorypostprocessor",level:2},{value:"PropertyPlaceholder Configurer",id:"propertyplaceholder-configurer",level:3},{value:"PropertyOverrideConfigurer",id:"propertyoverrideconfigurer",level:3},{value:"CustomEditorConfigurer",id:"customeditorconfigurer",level:3},{value:"\u81ea\u5b9a\u4e49PropertyEditor",id:"\u81ea\u5b9a\u4e49propertyeditor",level:4}];function d(e){const r={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components},{Details:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["For the relevant code from",(0,n.jsx)(r.a,{href:"https://github.com/spring-projects/spring-framework.git",title:"official source",children:"Official Codebase"})," spring-test) please see",(0,n.jsx)(r.a,{href:"https://github.com/Halcyon66/spring-frame-modified/tree/main/spring-test",children:"spring-framework"})," org.springframe.mylearntest package."]}),"\n",(0,n.jsx)(r.p,{children:"Container Start Stage"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"The container starts starting with some way to load Configuration MetaData.Apart from the more direct method, in most cases the containers will have to rely on certain tool classes (Bean DefinititionReader) to parse and analyse the loaded configuration MetaData, and to group the analysed information into the corresponding BeanDefinitis, and finally register the BeanDefinitis, which keeps the necessary information on bean definition."}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Bean Examination Stage"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Phase 1: All bean definition information is now registered in BeanDefinitis by way of BeanDefinition."}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Phase Two: When a requesting party explicitly requests an object through the container's getBean method, or when the getBean method is required to use the getBean method.At this stage, the container will first check if the requested object has been initialized.If not, the requested object will be instantiated and relied upon on on the information provided by registered BeanDefinition.If the object implements some callback interfaces it will also be configured in accordance with the callback interface.The container will return the object to the requesting party to use it immediately after it has been installed."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"beanfactorypostprocessor",children:"BeanFactoryPostProcessor"}),"\n",(0,n.jsx)(r.p,{children:"Spring provides a container extension called BeanFactoryPostProcessor.The mechanism allows us to modify the information kept by BeanDefinitis, registered to the container, before instantiating the corresponding object.This would amount to adding a process at the end of the first stage of implementation of the container, allowing us to make some additional actions with respect to the eventual BeanDefinitis, such as amending some of the attributes of the bean definition and adding additional information to the bean definition."}),"\n",(0,n.jsxs)(r.p,{children:["If you want to customize BeanFactoryPostProcessor, we usually need to implement the ",(0,n.jsx)(r.code,{children:"org.springframe.beans.factory.config.BeanFactoryPostProcessor"})," interface.This may require the implementation of simultaneous Springorg.springframe.core.Ordered interfaces to ensure that BeanFactoryPostProcessors can be executed in a predetermined sequence (if sequentially)."]}),"\n",(0,n.jsxs)(r.p,{children:["Of these, ",(0,n.jsx)(r.code,{children:"org.springframe.beans.factory.config.PropertyPlaceholderConfigurer"})," and ",(0,n.jsx)(r.code,{children:"org.springframe.beans.factory.config.PropertyOverrideConfigurer"})," are two more common BeanFactoryPostProcessor."]}),"\n",(0,n.jsx)(r.h3,{id:"propertyplaceholder-configurer",children:"PropertyPlaceholder Configurer"}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"xml configuration"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-XML",children:'<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n\t   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n\t   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">\n\t\x3c!--\t\u4f7f\u7528\u7684BeanFactoryPostProcessor--\x3e\n\t\x3c!--\t\u4f7f\u7528PropertyPlaceholderConfigurer\u5360\u4f4d\u7b26\u7684\u6570\u636e\u6e90\u914d\u7f6e--\x3e\n\t<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">\n\t\t<property name="locations">\n\t\t\t<list>\n\t\t\t\t<value>../conf/jdbc.properties</value>\n\t\t\t\t<value>../conf/mail.properties</value>\n\t\t\t</list>\n\t\t</property>\n\t</bean>\n\n\t<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">\n\t\t<property name="url" value="${jdbc.url}"/>\n\t\t<property name="driverClassName" value="${jdbc.driver}"/>\n\t\t<property name="username" value="${jdbc.username}"/>\n\t\t<property name="password" value="${jdbc.password}"/>\n\t\t<property name="testOnBorrow" value="true"/>\n\t\t<property name="testOnReturn" value="true"/>\n\t\t<property name="testWhileIdle" value="true"/>\n\t\t<property name="minEvictableIdleTimeMillis" value="180000"/>\n\t\t<property name="timeBetweenEvictionRunsMillis" value="360000"/>\n\t\t<property name="validationQuery" value="SELECT 1"/>\n\t\t<property name="maxOpenPreparedStatements" value="100"/>\n\t</bean>\n\n\t\x3c!--  \u4f7f\u7528PropertyOverrideConfigurer\u66ff\u6362PropertyPlaceholderConfigurer\u4e2d\u7684\u914d\u7f6e--\x3e\n\t<bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">\n\t\t<property name="location" value="../conf/pool-adjustment.properties"/>\n\t</bean>\n</beans>\n'})})]}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"jdbc.properties"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-properties",children:"jdbc.url=jdbc:mysql:/server/MAIN?useUnicode=true&charterEncoding=ms932&failOverReadOnly=false&roundRobinLoadBalance=true\njdbc.driver=com.mysql.jdbc.Driver\njdbc.username=root\njdbc.password=root\n"})})]}),"\n",(0,n.jsxs)(r.p,{children:["If ",(0,n.jsx)(r.code,{children:"org.apache.commons.dbcp2.BasicDataSource"})," is wrong, then ",(0,n.jsx)(r.code,{children:'api("org.apache.commons:commons-dbcp2:2.1.1")'})]}),"\n",(0,n.jsxs)(r.p,{children:["When BeanFactory loads all configuration information in the first phase, the attribute information of the object saved in BeanFactory only exists in the form of placeholders, such as ",(0,n.jsx)(r.code,{children:"${jdbc.url}"}),", ",(0,n.jsx)(r.code,{children:"${jdbc.driver}"}),".When the PropertyPlaceholder Configurer is applied as BeanFactoryPostProcesser, it uses configuration information in the properties configuration file to replace the property value expressed by the placeholder in BeanDefinition.Thus, when entering the second stage of the materialization of the container, the attribute value in the bean definition is the end of the replacement."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["PropertyPlaceholderConfigurer will not only load config items from its configured properties, but will also check Properties in the Java System class to control whether to load or overwrite the System's corresponding Properties by ",(0,n.jsx)(r.code,{children:"setSystemPropertiesMode()"})," or ",(0,n.jsx)(r.code,{children:"setSystemPropertiesModeName()"}),"."]}),"\n",(0,n.jsx)(r.li,{children:"PropertyPlaceholderConfigurer offers SYSTEM_PROPERTION_MODE_FALLBACK, SYSTEM_PROPERTES_MODE_NEVER and SYSTEM_PROPERTIES_MODE_OVERRIDEBy default SYSTEM_PROPERTIES_MODE_FALLBACK that cannot be configured in the Fruit Properties file, and we can also choose not to check System's Properties or overwrite them."}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"propertyoverrideconfigurer",children:"PropertyOverrideConfigurer"}),"\n",(0,n.jsx)(r.p,{children:"\u914d\u7f6e\u5728properties\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u901a\u5e38\u90fd\u4ee5\u660e\u6587\u8868\u793a\uff0cPropertyOverrideConfigurer \u7684\u7236\u7c7b PropertyResourceConfigurer \u63d0\u4f9b\u4e86\u4e00\u4e2aprotected\u7c7b\u578b\u7684\u65b9\u6cd5convertPropertyValue\uff0c\u5141\u8bb8\u5b50\u7c7b\u8986\u76d6\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u76f8\u5e94\u7684\u7f6e\u9879\u8fdb\u884c\u8f6c\u6362\uff0c\u5982\u5bf9\u52a0\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u89e3\u5bc6\u4e4b\u540e\u518d\u8986\u76d6\u5230\u76f8\u5e94\u7684bean\u5b9a\u4e49\u4e2d\u3002\u5f53\u7136\uff0c\u65e2\u7136PropertyPlaceholderConfigurer\u4e5f\u540c\u6837\u7ee7\u627f\u4e86 PropertyResourceConfigurer \uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u9488\u5bf9PropertyPlaceholderConfigurer\u5e94\u7528\u7c7b\u4f3c\u7684\u529f\u80fd\u3002"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{src:"https://s2.loli.net/2023/07/22/xJKIuHdQwa19on5.png",alt:"image-20230722162007693"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-XML",children:'<bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">\n    <property name="location" value="pool-adjustment.properties"/>\n</bean>\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-properties",children:"dataSource.minEvictableIdleTimeMillis=1000\ndataSource.maxOpenPreparedStatements=50\n"})}),"\n",(0,n.jsx)(r.h3,{id:"customeditorconfigurer",children:"CustomEditorConfigurer"}),"\n",(0,n.jsx)(r.p,{children:"CustomEditorConfigurer\u662f\u53e6\u4e00\u79cd\u7c7b\u578b\u7684BeanFactoryPostProcessor\u5b9e\u73b0\uff0c\u5b83\u53ea\u662f\u8f85\u52a9\u6027\u5730\u5c06\u540e\u671f\u4f1a\u7528\u5230\u7684\u4fe1\u606f\u6ce8\u518c\u5230\u5bb9\u5668\uff0c\u5bf9BeanDefinition\u6ca1\u6709\u505a\u4efb\u4f55\u53d8\u52a8\u3002"}),"\n",(0,n.jsxs)(r.p,{children:["Spring\u63d0\u4f9b\u7684\u90e8\u5206",(0,n.jsx)(r.code,{children:"PropertyEditor: StringArrayPropertyEditor"}),"\u3002\u8be5PropertyEditor\u4f1a\u5c06\u7b26\u5408CSV\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u6210String[]\u6570\u7ec4\u7684\u5f62\u5f0f\uff0c\u9ed8\u8ba4\u662f\u4ee5\u9017\u53f7\uff08\uff0c\uff09\u5206\u9694\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u53ef\u4ee5\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u5206\u9694\u7b26\u3002ByteArrayPropertyEditor\u3001CharArrayPropertyEditor\u7b49\u90fd\u5c5e\u4e8e\u7c7b\u4f3c\u529f\u80fd\u7684PropertyEditor\uff0c\u53c2\u7167Javadoc\u53ef\u4ee5\u53d6\u5f97\u76f8\u5e94\u7684\u8be6\u7ec6\u4fe1\u606f\u3002"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"ClassEditor\u3002\u6839\u636eString\u7c7b\u578b\u7684class\u540d\u79f0\uff0c\u76f4\u63a5\u5c06\u5176\u8f6c\u6362\u6210\u76f8\u5e94\u7684Class\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7Class.forName(String)\u5b8c\u6210\u7684\u529f\u6548\u3002\u53ef\u4ee5\u901a\u8fc7String[]\u6570\u7ec4\u7684\u5f62\u5f0f\u4f20\u5165\u9700\u8f6c\u6362\u7684\u503c\uff0c\u4ee5\u8fbe\u5230\u4e0e\u63d0\u4f9bClassArrayEditor\u540c\u6837\u7684\u76ee\u7684\u3002"}),"\n",(0,n.jsx)(r.li,{children:"FileEditor\u3002 Spring\u63d0\u4f9b\u7684\u5bf9\u5e94java.io.File\u7c7b\u578b\u7684PropertyEditor\u3002\u540c\u5c5e\u4e8e\u5bf9\u8d44\u6e90\u8fdb\u884c\u5b9a\u4f4d\u7684PropertyEditor\u8fd8\u6709InputStreamEditor\u3001 URLEditor\u7b49\u3002"}),"\n",(0,n.jsx)(r.li,{children:"LocaleEditor\u3002\u9488\u5bf9java.util.Locale\u7c7b\u578b\u7684PropertyEditor\uff0c\u683c\u5f0f\u53ef\u4ee5\u53c2\u7167LocaleEditor\u548cLocale\u7684Javadoc\u8bf4\u660e\u3002"}),"\n",(0,n.jsx)(r.li,{children:"PatternEditor\u3002\u9488\u5bf9Java SE 1.4\u4e4b\u540e\u624d\u5f15\u5165\u7684java.util.regex.Pattern\u7684PropertyEditor\uff0c\u683c\u5f0f\u53ef\u4ee5\u53c2\u7167java.util.regex.Pattern\u7c7b\u7684Javadoc\u3002"}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"\u4ee5\u4e0a\u8fd9\u4e9bPropertyEditor\uff0c\u5bb9\u5668\u901a\u5e38\u4f1a\u9ed8\u8ba4\u52a0\u8f7d\u4f7f\u7528\uff0c\u6240\u4ee5\uff0c\u5373\u4f7f\u6211\u4eec\u4e0d\u544a\u8bc9\u5bb9\u5668\u5e94\u8be5\u5982\u4f55\u5bf9\u8fd9\u4e9b\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362\uff0c\u5bb9\u5668\u540c\u6837\u53ef\u4ee5\u6b63\u786e\u5730\u5b8c\u6210\u5de5\u4f5c\u3002\u4f46\u5f53\u6211\u4eec\u9700\u8981\u6307\u5b9a\u7684\u7c7b\u578b\u6ca1\u6709\u5305\u542b\u5728\u4ee5\u4e0a\u6240\u63d0\u5230PropertyEditor\u4e4b\u5217\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u7ed9\u51fa\u9488\u5bf9\u8fd9\u79cd\u7c7b\u578b\u7684PropertyEditor\u5b9e\u73b0\uff0c\u5e76\u901a\u8fc7CustomEditorConfigurer\u544a\u77e5\u5bb9\u5668\uff0c\u4ee5\u4fbf\u5bb9\u5668\u5728\u9002\u5f53\u7684\u65f6\u673a\u4f7f\u7528\u5230\u9002\u5f53\u7684PropertyEditor\u3002"}),"\n",(0,n.jsx)(r.h4,{id:"\u81ea\u5b9a\u4e49propertyeditor",children:"\u81ea\u5b9a\u4e49PropertyEditor"}),"\n",(0,n.jsx)(r.p,{children:"\u5bf9\u4e8eDate\u7c7b\u578b\uff0c\u4e0d\u540c\u7684Locale\u3001\u4e0d\u540c\u7684\u7cfb\u7edf\u5728\u8868\u73b0\u5f62\u5f0f\u4e0a\u5b58\u5728\u4e0d\u540c\u7684\u9700\u6c42\u3002\u5982\u7cfb\u7edf\u8fd9\u4e2a\u90e8\u5206\u9700\u8981\u4ee5yyyy-MM-dd\u7684\u5f62\u5f0f\u8868\u73b0\u65e5\u671f\uff0c\u7cfb\u7edf\u90a3\u4e2a\u90e8\u5206\u53ef\u80fd\u53c8\u9700\u8981\u4ee5yyyyMMdd\u7684\u5f62\u5f0f\u5bf9\u65e5\u671f\u8fdb\u884c\u8f6c\u6362\u3002"}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"DatePropertyEditor"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-java",children:"package org.springframework.mylearntest.beanfactorypostprocessor;\n\nimport java.beans.PropertyEditorSupport;\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\n\npublic class DatePropertyEditor extends PropertyEditorSupport {\n    private String datePattern;\n\n    @Override\n    public void setAsText(String text) throws IllegalArgumentException {\n        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(getDatePattern());\n        LocalDate dateValue = LocalDate.parse(text,dateTimeFormatter);\n        setValue(dateValue);\n    }\n\n    @Override\n    public String getAsText() {\n        return super.getAsText();\n    }\n\n    public String getDatePattern() {\n        return datePattern;\n    }\n\n    public void setDatePattern(String datePattern) {\n        this.datePattern = datePattern;\n    }\n}\n"})})]}),"\n",(0,n.jsx)(r.p,{children:"\u5982\u679c\u4ec5\u4ec5\u662f\u652f\u6301\u5355\u5411\u7684\u4eceString\u5230\u76f8\u5e94\u5bf9\u8c61\u7c7b\u578b\u7684\u8f6c\u6362\uff0c\u53ea\u8981\u8986\u5199\u65b9\u6cd5setAsText(String)\u5373\u53ef\u3002\u5982\u679c\u60f3\u652f\u6301\u53cc\u5411\u8f6c\u6362\uff0c\u9700\u8981\u540c\u65f6\u8003\u8651getAsText()\u65b9\u6cd5\u7684\u8986\u5199\u3002"}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"DatePropertyEditorRegistrar"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-java",children:"package org.springframework.mylearntest.beanfactorypostprocessor;\n\nimport org.springframework.beans.PropertyEditorRegistrar;\nimport org.springframework.beans.PropertyEditorRegistry;\n\nimport java.beans.PropertyEditor;\n\npublic class DatePropertyEditorRegistrar implements PropertyEditorRegistrar {\n    private PropertyEditor propertyEditor;\n\n    public PropertyEditor getPropertyEditor() {\n        return propertyEditor;\n    }\n\n    public void setPropertyEditor(PropertyEditor propertyEditor) {\n        this.propertyEditor = propertyEditor;\n    }\n\n    @Override\n    public void registerCustomEditors(PropertyEditorRegistry registry) {\n        registry.registerCustomEditor(java.util.Date.class, getPropertyEditor());\n    }\n}\n"})})]}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"xml configuration"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-XML",children:'<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"\n       xmlns:aop="http://www.springframework.org/schema/aop">\n\n    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">\n        <property name="propertyEditorRegistrars">\n            <list>\n                <ref bean="datePropertyEditorRegistrar"/>\n            </list>\n        </property>\n    </bean>\n\n    <bean id="datePropertyEditorRegistrar" class="org.springframework.mylearntest.beanfactorypostprocessor.DatePropertyEditorRegistrar">\n        <property name="propertyEditor">\n            <ref bean="datePropertyEditor"/>\n        </property>\n    </bean>\n\n    <bean id="datePropertyEditor" class="org.springframework.mylearntest.beanfactorypostprocessor.DatePropertyEditor">\n        <property name="datePattern">\n            <value>yyyy/MM/dd</value>\n        </property>\n    </bean>\n</beans>\n'})})]}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"\u6d4b\u8bd5\u7c7b"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-java",children:'package org.springframework.mylearntest.beanfactorypostprocessor;\n\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class Test4DateProp {\n    public static void main(String[] args) {\n        // applicationContext\n        ApplicationContext context = new ClassPathXmlApplicationContext("datepropertyeditor2.xml");\n        DatePropertyEditor datePropertyEditor = (DatePropertyEditor) context.getBean("datePropertyEditor");\n        datePropertyEditor.setAsText("2020/06/21");\n    }\n}\n'})})]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"References"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsx)(r.li,{children:"The book name\uff1aSpring revelator\uff1a"}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,r,t)=>{t.d(r,{Z:()=>s,a:()=>i});var n=t(7294);const o={},a=n.createContext(o);function i(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);